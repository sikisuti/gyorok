<UserControl x:Class="GyorokRentService.View.NewCustomerUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GyorokRentService.ViewModel"
             xmlns:valid="clr-namespace:GyorokRentService.Validations"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="538" d:DesignWidth="650" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:my="clr-namespace:GyorokRentService.View">
    
    <UserControl.Resources>
        <ResourceDictionary Source="/RootResources.xaml"/>
    </UserControl.Resources>

    <StackPanel>
        <StackPanel Orientation="Horizontal">
            <RadioButton Margin="5" Visibility="{Binding visibleMode}" GroupName="1" IsChecked="{Binding newCustomer.isFirm}" Content="Cég" />
            <RadioButton Margin="5" GroupName="1" IsChecked="{Binding newCustomer.isFirm, Converter={StaticResource boolInverter}}" Content="Magánszemély" />
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="200"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition MinWidth="200" MaxWidth="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Label Content="Kölcsönző neve:" />
            <TextBox Name="txtCustomerName" 
                     Grid.Column="2" 
                     Text="{Binding newCustomer.customerName, UpdateSourceTrigger=PropertyChanged}"
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"/>
            <Label Grid.Row="1" Content="Azonosító szám:" />
            <TextBox Name="txtIDNumber"
                     Grid.Row="1" Grid.Column="2" 
                     Text="{Binding newCustomer.IDNumber, UpdateSourceTrigger=PropertyChanged}" 
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"/>
            <Label Grid.Row="2" Content="Anyja neve:" Visibility="{Binding newCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" />
            <TextBox Name="txtMothersName" 
                     Grid.Row="2" Grid.Column="2" 
                     Visibility="{Binding newCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" 
                     Text="{Binding newCustomer.mothersName, UpdateSourceTrigger=PropertyChanged}"
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
            <Label Grid.Row="3" Content="Cím:" />
            <Button Grid.Row="3" Grid.Column="1" Content="..." Command="{Binding openCityChooser}" Height="23" Width="29" />
            <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal">
                <Label Content="{Binding newCustomer.city.postalCode}" />
                <Label Content="{Binding newCustomer.city.city}" />
            </StackPanel>
            <TextBox Name="txtCustomerAddress" 
                     Grid.Row="4" Grid.Column="2" 
                     Text="{Binding newCustomer.customerAddress, UpdateSourceTrigger=PropertyChanged}"
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
            <Label Grid.Row="5" Content="Telefon:" />
            <TextBox Name="txtCustomerPhone" 
                     Grid.Row="5" Grid.Column="2" 
                     Text="{Binding newCustomer.customerPhone, UpdateSourceTrigger=PropertyChanged}"
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
            <Label Grid.Row="6" Content="Születési dátum:" Visibility="{Binding newCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" />
            <xctk:DateTimePicker Name="dtpBirthDate" 
                                 Grid.Column="2" Grid.Row="6" 
                                 Value="{Binding newCustomer.birthDate, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource CustomEditableDatePicker}"
                                 Visibility="{Binding newCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" 
                                 Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
            <Label Grid.Row="7" Content="Munkahely:" Visibility="{Binding newCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" />
            <TextBox Name="txtWorkplace" 
                     Grid.Row="7" Grid.Column="2" 
                     Visibility="{Binding newCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" 
                     Text="{Binding newCustomer.workplace, UpdateSourceTrigger=PropertyChanged}"
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Margin="3">
                <Label Content="Megjegyzés:" />
                <TextBox AcceptsReturn="True" Background="White" Height="78" Text="{Binding newCustomer.comment}" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Margin="3">
                <Label Content="Problémák:" />
                <TextBox AcceptsReturn="True" Background="White" Height="78" Text="{Binding newCustomer.problems}" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" />
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
        </Grid>
        <StackPanel Orientation="Horizontal">
            <Label Content="Kedvezmény:" />
            <TextBox Text="{Binding newCustomer.defaultDiscount}" />
            <Label Content="%" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Grid.Column="1">
            <Button Command="{Binding insertNewCustomer}" Height="64" Width="64" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=txtCustomerName, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtIDNumber, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtMothersName, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtCustomerAddress, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtCustomerPhone, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=dtpBirthDate, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=txtWorkplace, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Margin="0,0,0,0" Stretch="Fill" Source="/GyorokRentService;component/Images/IconAccept64.png" />
            </Button>
        </StackPanel>   
    </StackPanel>
</UserControl>
