<UserControl x:Class="GyorokRentService.View.CustomerSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:GyorokRentService.ViewModel"
             xmlns:view="clr-namespace:GyorokRentService.View"
             xmlns:root="clr-namespace:GyorokRentService"
             xmlns:conv="clr-namespace:GyorokRentService.Converters"
             xmlns:valid="clr-namespace:GyorokRentService.Validations"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" BorderThickness="1">

    <UserControl.Resources>
        <Style x:Key="CustomEditableTextBoxForRent" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CustomEditableTextBox}">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="true">
                    <Setter Property="Background" Value="{StaticResource RentBgBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomEditableDatePickerForRent" TargetType="{x:Type xctk:DateTimePicker}" BasedOn="{StaticResource CustomEditableDatePicker}">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="true">
                    <Setter Property="Background" Value="{StaticResource RentBgBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <StackPanel Margin="5">
            <TextBlock HorizontalAlignment="Center" FontSize="32" FontWeight="Bold" Text="Ügyfél"  />
    <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="200" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MaxWidth="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBox Name="txtCustomerName" 
                     Grid.Column="2" Grid.Row="1"  
                     Visibility="{Binding isEditable, Converter={StaticResource boolToVis}}" 
                     Text="{Binding selectedCustomer.customerName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"/>
            <Label Content="{Binding customerNameLabel}" Grid.Row="1" />
            <Expander x:Name="expCustomer"
                      IsEnabled="{Binding isReadonly, Converter={StaticResource boolInverter}}" 
                      Visibility="{Binding isEditable, Converter={StaticResource boolToVis}, ConverterParameter=true}"
                      Grid.Row="1" Grid.Column="3"
                      BorderThickness="5">
                    <Expander.Header>
                        <TextBlock Text="{Binding selectedCustomer.customerName}" FontSize="20" FontWeight="Bold"/>
                    </Expander.Header>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Expanded">
                        <i:InvokeCommandAction Command="{Binding onExpand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Collapsed">
                        <i:InvokeCommandAction Command="{Binding onCollapse}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid x:Name="grdExpander" VerticalAlignment="Top" Background="White" Margin="0,0,0,0">
                    <!--Insert user control from codebehind-->
                </Grid>
            </Expander>
            <Label Content="Azonosító szám:" Grid.Row="2" />
                <TextBox Name="txtIDNumber" 
                         Grid.Column="2" Grid.Row="2" 
                         Text="{Binding selectedCustomer.IDNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                         Style="{StaticResource CustomEditableTextBoxForRent}"
                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"/>
                <Label Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" Content="Anyja neve:" Grid.Row="3" />
                <TextBox Name="txtMothersName" 
                         Style="{StaticResource CustomEditableTextBoxForRent}" 
                         Grid.Row="3" Grid.Column="2" 
                         Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" 
                         Text="{Binding selectedCustomer.mothersName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
                <Label Content="Cím:" Grid.Row="4" />
                <Button Grid.Column="1" Grid.Row="4" Visibility="{Binding isEditable, Converter={StaticResource boolToVis}}" Command="{Binding openCityChooser}" Content="..." Height="23" Width="29" />
                <Label Grid.Column="2" Grid.Row="4" Content="{Binding selectedCustomer.city.city}" FontWeight="Normal" />
                <TextBox Name="txtCustomerAddress" 
                         Grid.Column="2" Grid.Row="5" 
                         Style="{StaticResource CustomEditableTextBoxForRent}" 
                         Text="{Binding selectedCustomer.customerAddress, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
                <Label Content="Telefon:" Grid.Row="6" />
                <TextBox Name="txtCustomerPhone" 
                         Grid.Column="2" Grid.Row="6" 
                         Style="{StaticResource CustomEditableTextBoxForRent}" 
                         Text="{Binding selectedCustomer.customerPhone, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"/>
                <Label Grid.Row="7" Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" Content="Születési dátum:" FontWeight="Bold" />
                <xctk:DateTimePicker Name="dtpBirthDate" 
                                     Grid.Column="2" Grid.Row="7" 
                                     Style="{StaticResource CustomEditableDatePickerForRent}"
                                     Value="{Binding selectedCustomer.birthDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                     Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" 
                                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"/>
                <Label Grid.Row="8" Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" Content="Munkahely:" />
                <TextBox Name="txtWorkplace" 
                         Grid.Column="2" Grid.Row="8" 
                         Style="{StaticResource CustomEditableTextBoxForRent}" 
                         Text="{Binding selectedCustomer.workplace, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}, ConverterParameter=true}" 
                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" />
            </Grid>
            <StackPanel Orientation="Horizontal" Visibility="{Binding selectedCustomer.isFirm, Converter={StaticResource boolToVis}}">
                <Label Content="Kapcsolattartók:" Width="200" />
                <StackPanel>
                    <StackPanel>
                        <Button Visibility="{Binding isEditable, Converter={StaticResource boolToVis}}" Command="{Binding openEditContacts}" Height="32" Width="32" BorderThickness="0" BorderBrush="{x:Null}" Background="{x:Null}">
                            <Grid>
                                <Image Source="/GyorokRentService;component/Images/IconAddPerson32.png" />
                            </Grid>
                        </Button>
                        <Button Visibility="{Binding isEditable, Converter={StaticResource boolToVis}}" Command="{Binding deleteContact}" Height="32" Width="32" BorderThickness="0" BorderBrush="{x:Null}" Background="{x:Null}">
                            <Grid>
                                <Image Source="/GyorokRentService;component/Images/IconDelPerson32.png" />
                            </Grid>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <ListBox ItemsSource="{Binding selectedCustomer.contacts}" SelectedValue="{Binding selectedContact}" MinWidth="300" MaxHeight="60" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="col0" Width="0"/>
                                    <ColumnDefinition SharedSizeGroup="col1" Width="200"/>
                                    <ColumnDefinition SharedSizeGroup="col3" Width="100"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding id}"/>
                                <TextBlock Text='{Binding customerName}' Grid.Column="1"/>
                                <TextBlock Text='{Binding IDNumber}' Grid.Column="2"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Margin="5">
                    <Label Content="Megjegyzés:" />
                    <TextBox IsEnabled="{Binding selectedCustomer, Converter={StaticResource objectExistsToBool}}" Text="{Binding selectedCustomer.comment}" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Height="99" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding saveComments}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5">
                    <Label Content="Problémák:" />
                    <TextBox IsEnabled="{Binding selectedCustomer, Converter={StaticResource objectExistsToBool}}" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Height="99" Text="{Binding selectedCustomer.problems, Mode=TwoWay}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding saveComments}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
                <!--<Button Grid.ColumnSpan="2" Grid.Row="1" Command="{Binding saveComments}" Visibility="{Binding commentSaveVisibility}" Height="32" Width="32" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}">
                    <Grid>
                        <Image Source="/GyorokRentService;component/Images/IconSave32.png"/>
                    </Grid>
                </Button>-->
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="Kedvezmény:" FontWeight="Bold" />
                    <TextBox Style="{StaticResource CustomEditableTextBoxForRent}" Text="{Binding selectedCustomer.defaultDiscount, StringFormat=P0, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="50" />
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button Visibility="{Binding isEditable, Converter={StaticResource boolToVis}, ConverterParameter=true}" Command="{Binding switchModifyMode}" Height="48" Width="48" BorderThickness="0" BorderBrush="{x:Null}" Background="{x:Null}">
                        <Grid>
                            <Image Source="/GyorokRentService;component/Images/IconEdit48.png"/>
                        </Grid>
                    </Button>
                    <Button Visibility="{Binding isEditable, Converter={StaticResource boolToVis}}" Command="{Binding doModify}" Height="48" Width="48" BorderThickness="0" BorderBrush="{x:Null}" Background="{x:Null}" >
                        <Grid>
                            <Image Source="/GyorokRentService;component/Images/IconSave48.png"/>
                        </Grid>
                    </Button>
                </StackPanel>                
            </Grid>
        </StackPanel>
    </ScrollViewer>
    <UserControl.BorderBrush>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="0" />
            <GradientStop Color="White" Offset="1" />
        </LinearGradientBrush>
    </UserControl.BorderBrush>
</UserControl>
