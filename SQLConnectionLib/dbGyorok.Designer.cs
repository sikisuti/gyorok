//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Customers_Cities", "Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQLConnectionLib.Cities), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Customers), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_contacts_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.Customers), "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Contacts), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_contacts_Customers1", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.Customers), "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Contacts), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Rentals_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.Customers), "Rentals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Rentals), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Rentals_Customers1", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQLConnectionLib.Customers), "Rentals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Rentals), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_ServiceWorksheets_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.Customers), "ServiceWorksheets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.ServiceWorksheets), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_ServiceWorksheets_ErrorTypes", "ErrorTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.ErrorTypes), "ServiceWorksheets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.ServiceWorksheets), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Parts_ServiceWorksheets", "ServiceWorksheets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.ServiceWorksheets), "Parts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Parts), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Rentals_PayTypes", "PayTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.PayTypes), "Rentals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Rentals), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Rentals_RentalGroups", "RentalGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.RentalGroups), "Rentals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Rentals), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Rentals_Tools", "Tools", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.Tools), "Rentals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Rentals), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_ServiceWorksheets_ServiceStatuses", "ServiceStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.ServiceStatuses), "ServiceWorksheets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.ServiceWorksheets), true)]
[assembly: EdmRelationshipAttribute("dbGyorokModel", "FK_Tools_ToolStatuses", "ToolStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLConnectionLib.ToolStatuses), "Tools", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLConnectionLib.Tools), true)]

#endregion

namespace SQLConnectionLib
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class dbGyorokEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new dbGyorokEntities object using the connection string found in the 'dbGyorokEntities' section of the application configuration file.
        /// </summary>
        public dbGyorokEntities() : base("name=dbGyorokEntities", "dbGyorokEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dbGyorokEntities object.
        /// </summary>
        public dbGyorokEntities(string connectionString) : base(connectionString, "dbGyorokEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dbGyorokEntities object.
        /// </summary>
        public dbGyorokEntities(EntityConnection connection) : base(connection, "dbGyorokEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cities> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<Cities>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<Cities> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contacts> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contacts>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contacts> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customers> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customers>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customers> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorTypes> ErrorTypes
        {
            get
            {
                if ((_ErrorTypes == null))
                {
                    _ErrorTypes = base.CreateObjectSet<ErrorTypes>("ErrorTypes");
                }
                return _ErrorTypes;
            }
        }
        private ObjectSet<ErrorTypes> _ErrorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parts> Parts
        {
            get
            {
                if ((_Parts == null))
                {
                    _Parts = base.CreateObjectSet<Parts>("Parts");
                }
                return _Parts;
            }
        }
        private ObjectSet<Parts> _Parts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayTypes> PayTypes
        {
            get
            {
                if ((_PayTypes == null))
                {
                    _PayTypes = base.CreateObjectSet<PayTypes>("PayTypes");
                }
                return _PayTypes;
            }
        }
        private ObjectSet<PayTypes> _PayTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentalGroups> RentalGroups
        {
            get
            {
                if ((_RentalGroups == null))
                {
                    _RentalGroups = base.CreateObjectSet<RentalGroups>("RentalGroups");
                }
                return _RentalGroups;
            }
        }
        private ObjectSet<RentalGroups> _RentalGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rentals> Rentals
        {
            get
            {
                if ((_Rentals == null))
                {
                    _Rentals = base.CreateObjectSet<Rentals>("Rentals");
                }
                return _Rentals;
            }
        }
        private ObjectSet<Rentals> _Rentals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceGroups> ServiceGroups
        {
            get
            {
                if ((_ServiceGroups == null))
                {
                    _ServiceGroups = base.CreateObjectSet<ServiceGroups>("ServiceGroups");
                }
                return _ServiceGroups;
            }
        }
        private ObjectSet<ServiceGroups> _ServiceGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceStatuses> ServiceStatuses
        {
            get
            {
                if ((_ServiceStatuses == null))
                {
                    _ServiceStatuses = base.CreateObjectSet<ServiceStatuses>("ServiceStatuses");
                }
                return _ServiceStatuses;
            }
        }
        private ObjectSet<ServiceStatuses> _ServiceStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceWorksheets> ServiceWorksheets
        {
            get
            {
                if ((_ServiceWorksheets == null))
                {
                    _ServiceWorksheets = base.CreateObjectSet<ServiceWorksheets>("ServiceWorksheets");
                }
                return _ServiceWorksheets;
            }
        }
        private ObjectSet<ServiceWorksheets> _ServiceWorksheets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemParameters> SystemParameters
        {
            get
            {
                if ((_SystemParameters == null))
                {
                    _SystemParameters = base.CreateObjectSet<SystemParameters>("SystemParameters");
                }
                return _SystemParameters;
            }
        }
        private ObjectSet<SystemParameters> _SystemParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableVersions> TableVersions
        {
            get
            {
                if ((_TableVersions == null))
                {
                    _TableVersions = base.CreateObjectSet<TableVersions>("TableVersions");
                }
                return _TableVersions;
            }
        }
        private ObjectSet<TableVersions> _TableVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tools> Tools
        {
            get
            {
                if ((_Tools == null))
                {
                    _Tools = base.CreateObjectSet<Tools>("Tools");
                }
                return _Tools;
            }
        }
        private ObjectSet<Tools> _Tools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToolStatuses> ToolStatuses
        {
            get
            {
                if ((_ToolStatuses == null))
                {
                    _ToolStatuses = base.CreateObjectSet<ToolStatuses>("ToolStatuses");
                }
                return _ToolStatuses;
            }
        }
        private ObjectSet<ToolStatuses> _ToolStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DetailedCustomers> DetailedCustomers
        {
            get
            {
                if ((_DetailedCustomers == null))
                {
                    _DetailedCustomers = base.CreateObjectSet<DetailedCustomers>("DetailedCustomers");
                }
                return _DetailedCustomers;
            }
        }
        private ObjectSet<DetailedCustomers> _DetailedCustomers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentalSum> RentalSum
        {
            get
            {
                if ((_RentalSum == null))
                {
                    _RentalSum = base.CreateObjectSet<RentalSum>("RentalSum");
                }
                return _RentalSum;
            }
        }
        private ObjectSet<RentalSum> _RentalSum;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceSum> ServiceSum
        {
            get
            {
                if ((_ServiceSum == null))
                {
                    _ServiceSum = base.CreateObjectSet<ServiceSum>("ServiceSum");
                }
                return _ServiceSum;
            }
        }
        private ObjectSet<ServiceSum> _ServiceSum;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimpleParts> SimpleParts
        {
            get
            {
                if ((_SimpleParts == null))
                {
                    _SimpleParts = base.CreateObjectSet<SimpleParts>("SimpleParts");
                }
                return _SimpleParts;
            }
        }
        private ObjectSet<SimpleParts> _SimpleParts;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(Cities cities)
        {
            base.AddObject("Cities", cities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contacts contacts)
        {
            base.AddObject("Contacts", contacts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorTypes(ErrorTypes errorTypes)
        {
            base.AddObject("ErrorTypes", errorTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParts(Parts parts)
        {
            base.AddObject("Parts", parts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayTypes(PayTypes payTypes)
        {
            base.AddObject("PayTypes", payTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentalGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentalGroups(RentalGroups rentalGroups)
        {
            base.AddObject("RentalGroups", rentalGroups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rentals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentals(Rentals rentals)
        {
            base.AddObject("Rentals", rentals);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceGroups(ServiceGroups serviceGroups)
        {
            base.AddObject("ServiceGroups", serviceGroups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceStatuses(ServiceStatuses serviceStatuses)
        {
            base.AddObject("ServiceStatuses", serviceStatuses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceWorksheets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceWorksheets(ServiceWorksheets serviceWorksheets)
        {
            base.AddObject("ServiceWorksheets", serviceWorksheets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemParameters(SystemParameters systemParameters)
        {
            base.AddObject("SystemParameters", systemParameters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableVersions(TableVersions tableVersions)
        {
            base.AddObject("TableVersions", tableVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTools(Tools tools)
        {
            base.AddObject("Tools", tools);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToolStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToolStatuses(ToolStatuses toolStatuses)
        {
            base.AddObject("ToolStatuses", toolStatuses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DetailedCustomers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDetailedCustomers(DetailedCustomers detailedCustomers)
        {
            base.AddObject("DetailedCustomers", detailedCustomers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentalSum EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentalSum(RentalSum rentalSum)
        {
            base.AddObject("RentalSum", rentalSum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceSum EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceSum(ServiceSum serviceSum)
        {
            base.AddObject("ServiceSum", serviceSum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimpleParts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimpleParts(SimpleParts simpleParts)
        {
            base.AddObject("SimpleParts", simpleParts);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="path">No Metadata Documentation available.</param>
        public int DoBackup(global::System.String path)
        {
            ObjectParameter pathParameter;
            if (path != null)
            {
                pathParameter = new ObjectParameter("path", path);
            }
            else
            {
                pathParameter = new ObjectParameter("path", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DoBackup", pathParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="Cities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cities object.
        /// </summary>
        /// <param name="cityID">Initial value of the cityID property.</param>
        /// <param name="postalCode">Initial value of the postalCode property.</param>
        /// <param name="city">Initial value of the city property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static Cities CreateCities(global::System.Int64 cityID, global::System.String postalCode, global::System.String city, global::System.Boolean isDeleted)
        {
            Cities cities = new Cities();
            cities.cityID = cityID;
            cities.postalCode = postalCode;
            cities.city = city;
            cities.isDeleted = isDeleted;
            return cities;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                if (_cityID != value)
                {
                    OncityIDChanging(value);
                    ReportPropertyChanging("cityID");
                    _cityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cityID");
                    OncityIDChanged();
                }
            }
        }
        private global::System.Int64 _cityID;
        partial void OncityIDChanging(global::System.Int64 value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String postalCode
        {
            get
            {
                return _postalCode;
            }
            set
            {
                OnpostalCodeChanging(value);
                ReportPropertyChanging("postalCode");
                _postalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("postalCode");
                OnpostalCodeChanged();
            }
        }
        private global::System.String _postalCode;
        partial void OnpostalCodeChanging(global::System.String value);
        partial void OnpostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Customers_Cities", "Customers")]
        public EntityCollection<Customers> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customers>("dbGyorokModel.FK_Customers_Cities", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customers>("dbGyorokModel.FK_Customers_Cities", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="Contacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contacts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contacts object.
        /// </summary>
        /// <param name="contactID">Initial value of the contactID property.</param>
        /// <param name="firmID">Initial value of the firmID property.</param>
        /// <param name="agentID">Initial value of the agentID property.</param>
        public static Contacts CreateContacts(global::System.Int64 contactID, global::System.Int64 firmID, global::System.Int64 agentID)
        {
            Contacts contacts = new Contacts();
            contacts.contactID = contactID;
            contacts.firmID = firmID;
            contacts.agentID = agentID;
            return contacts;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 contactID
        {
            get
            {
                return _contactID;
            }
            set
            {
                if (_contactID != value)
                {
                    OncontactIDChanging(value);
                    ReportPropertyChanging("contactID");
                    _contactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("contactID");
                    OncontactIDChanged();
                }
            }
        }
        private global::System.Int64 _contactID;
        partial void OncontactIDChanging(global::System.Int64 value);
        partial void OncontactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 firmID
        {
            get
            {
                return _firmID;
            }
            set
            {
                OnfirmIDChanging(value);
                ReportPropertyChanging("firmID");
                _firmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("firmID");
                OnfirmIDChanged();
            }
        }
        private global::System.Int64 _firmID;
        partial void OnfirmIDChanging(global::System.Int64 value);
        partial void OnfirmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 agentID
        {
            get
            {
                return _agentID;
            }
            set
            {
                OnagentIDChanging(value);
                ReportPropertyChanging("agentID");
                _agentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("agentID");
                OnagentIDChanged();
            }
        }
        private global::System.Int64 _agentID;
        partial void OnagentIDChanging(global::System.Int64 value);
        partial void OnagentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_contacts_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_contacts_Customers1", "Customers")]
        public Customers Customers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers1", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers1", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> Customers1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers1", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("dbGyorokModel.FK_contacts_Customers1", "Customers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="customerID">Initial value of the customerID property.</param>
        /// <param name="customerName">Initial value of the customerName property.</param>
        /// <param name="iDNumber">Initial value of the IDNumber property.</param>
        /// <param name="isFirm">Initial value of the isFirm property.</param>
        /// <param name="rentCounter">Initial value of the rentCounter property.</param>
        /// <param name="serviceCounter">Initial value of the serviceCounter property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static Customers CreateCustomers(global::System.Int64 customerID, global::System.String customerName, global::System.String iDNumber, global::System.Boolean isFirm, global::System.Int32 rentCounter, global::System.Int32 serviceCounter, global::System.Boolean isDeleted)
        {
            Customers customers = new Customers();
            customers.customerID = customerID;
            customers.customerName = customerName;
            customers.IDNumber = iDNumber;
            customers.isFirm = isFirm;
            customers.rentCounter = rentCounter;
            customers.serviceCounter = serviceCounter;
            customers.isDeleted = isDeleted;
            return customers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerID
        {
            get
            {
                return _customerID;
            }
            set
            {
                if (_customerID != value)
                {
                    OncustomerIDChanging(value);
                    ReportPropertyChanging("customerID");
                    _customerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("customerID");
                    OncustomerIDChanged();
                }
            }
        }
        private global::System.Int64 _customerID;
        partial void OncustomerIDChanging(global::System.Int64 value);
        partial void OncustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customerName
        {
            get
            {
                return _customerName;
            }
            set
            {
                OncustomerNameChanging(value);
                ReportPropertyChanging("customerName");
                _customerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("customerName");
                OncustomerNameChanged();
            }
        }
        private global::System.String _customerName;
        partial void OncustomerNameChanging(global::System.String value);
        partial void OncustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IDNumber
        {
            get
            {
                return _IDNumber;
            }
            set
            {
                OnIDNumberChanging(value);
                ReportPropertyChanging("IDNumber");
                _IDNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IDNumber");
                OnIDNumberChanged();
            }
        }
        private global::System.String _IDNumber;
        partial void OnIDNumberChanging(global::System.String value);
        partial void OnIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mothersName
        {
            get
            {
                return _mothersName;
            }
            set
            {
                OnmothersNameChanging(value);
                ReportPropertyChanging("mothersName");
                _mothersName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mothersName");
                OnmothersNameChanged();
            }
        }
        private global::System.String _mothersName;
        partial void OnmothersNameChanging(global::System.String value);
        partial void OnmothersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                OncityIDChanging(value);
                ReportPropertyChanging("cityID");
                _cityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cityID");
                OncityIDChanged();
            }
        }
        private Nullable<global::System.Int64> _cityID;
        partial void OncityIDChanging(Nullable<global::System.Int64> value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerAddress
        {
            get
            {
                return _customerAddress;
            }
            set
            {
                OncustomerAddressChanging(value);
                ReportPropertyChanging("customerAddress");
                _customerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerAddress");
                OncustomerAddressChanged();
            }
        }
        private global::System.String _customerAddress;
        partial void OncustomerAddressChanging(global::System.String value);
        partial void OncustomerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerPhone
        {
            get
            {
                return _customerPhone;
            }
            set
            {
                OncustomerPhoneChanging(value);
                ReportPropertyChanging("customerPhone");
                _customerPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerPhone");
                OncustomerPhoneChanged();
            }
        }
        private global::System.String _customerPhone;
        partial void OncustomerPhoneChanging(global::System.String value);
        partial void OncustomerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birthDate
        {
            get
            {
                return _birthDate;
            }
            set
            {
                OnbirthDateChanging(value);
                ReportPropertyChanging("birthDate");
                _birthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birthDate");
                OnbirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _birthDate;
        partial void OnbirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workPlace
        {
            get
            {
                return _workPlace;
            }
            set
            {
                OnworkPlaceChanging(value);
                ReportPropertyChanging("workPlace");
                _workPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("workPlace");
                OnworkPlaceChanged();
            }
        }
        private global::System.String _workPlace;
        partial void OnworkPlaceChanging(global::System.String value);
        partial void OnworkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isFirm
        {
            get
            {
                return _isFirm;
            }
            set
            {
                OnisFirmChanging(value);
                ReportPropertyChanging("isFirm");
                _isFirm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isFirm");
                OnisFirmChanged();
            }
        }
        private global::System.Boolean _isFirm;
        partial void OnisFirmChanging(global::System.Boolean value);
        partial void OnisFirmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String problems
        {
            get
            {
                return _problems;
            }
            set
            {
                OnproblemsChanging(value);
                ReportPropertyChanging("problems");
                _problems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("problems");
                OnproblemsChanged();
            }
        }
        private global::System.String _problems;
        partial void OnproblemsChanging(global::System.String value);
        partial void OnproblemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> defaultDiscount
        {
            get
            {
                return _defaultDiscount;
            }
            set
            {
                OndefaultDiscountChanging(value);
                ReportPropertyChanging("defaultDiscount");
                _defaultDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultDiscount");
                OndefaultDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _defaultDiscount;
        partial void OndefaultDiscountChanging(Nullable<global::System.Double> value);
        partial void OndefaultDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rentCounter
        {
            get
            {
                return _rentCounter;
            }
            set
            {
                OnrentCounterChanging(value);
                ReportPropertyChanging("rentCounter");
                _rentCounter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentCounter");
                OnrentCounterChanged();
            }
        }
        private global::System.Int32 _rentCounter;
        partial void OnrentCounterChanging(global::System.Int32 value);
        partial void OnrentCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 serviceCounter
        {
            get
            {
                return _serviceCounter;
            }
            set
            {
                OnserviceCounterChanging(value);
                ReportPropertyChanging("serviceCounter");
                _serviceCounter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceCounter");
                OnserviceCounterChanged();
            }
        }
        private global::System.Int32 _serviceCounter;
        partial void OnserviceCounterChanging(global::System.Int32 value);
        partial void OnserviceCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Customers_Cities", "Cities")]
        public Cities Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("dbGyorokModel.FK_Customers_Cities", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("dbGyorokModel.FK_Customers_Cities", "Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("dbGyorokModel.FK_Customers_Cities", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cities>("dbGyorokModel.FK_Customers_Cities", "Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_contacts_Customers", "Contacts")]
        public EntityCollection<Contacts> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contacts>("dbGyorokModel.FK_contacts_Customers", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contacts>("dbGyorokModel.FK_contacts_Customers", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_contacts_Customers1", "Contacts")]
        public EntityCollection<Contacts> Contacts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contacts>("dbGyorokModel.FK_contacts_Customers1", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contacts>("dbGyorokModel.FK_contacts_Customers1", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_Customers", "Rentals")]
        public EntityCollection<Rentals> Rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_Customers", "Rentals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_Customers", "Rentals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_Customers1", "Rentals")]
        public EntityCollection<Rentals> Rentals1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_Customers1", "Rentals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_Customers1", "Rentals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_ServiceWorksheets_Customers", "ServiceWorksheets")]
        public EntityCollection<ServiceWorksheets> ServiceWorksheets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceWorksheets>("dbGyorokModel.FK_ServiceWorksheets_Customers", "ServiceWorksheets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceWorksheets>("dbGyorokModel.FK_ServiceWorksheets_Customers", "ServiceWorksheets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="DetailedCustomers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DetailedCustomers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DetailedCustomers object.
        /// </summary>
        /// <param name="customerID">Initial value of the customerID property.</param>
        /// <param name="customerName">Initial value of the customerName property.</param>
        /// <param name="iDNumber">Initial value of the IDNumber property.</param>
        /// <param name="isFirm">Initial value of the isFirm property.</param>
        /// <param name="rentCounter">Initial value of the rentCounter property.</param>
        /// <param name="serviceCounter">Initial value of the serviceCounter property.</param>
        /// <param name="customerDeleted">Initial value of the customerDeleted property.</param>
        public static DetailedCustomers CreateDetailedCustomers(global::System.Int64 customerID, global::System.String customerName, global::System.String iDNumber, global::System.Boolean isFirm, global::System.Int32 rentCounter, global::System.Int32 serviceCounter, global::System.Boolean customerDeleted)
        {
            DetailedCustomers detailedCustomers = new DetailedCustomers();
            detailedCustomers.customerID = customerID;
            detailedCustomers.customerName = customerName;
            detailedCustomers.IDNumber = iDNumber;
            detailedCustomers.isFirm = isFirm;
            detailedCustomers.rentCounter = rentCounter;
            detailedCustomers.serviceCounter = serviceCounter;
            detailedCustomers.customerDeleted = customerDeleted;
            return detailedCustomers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerID
        {
            get
            {
                return _customerID;
            }
            set
            {
                if (_customerID != value)
                {
                    OncustomerIDChanging(value);
                    ReportPropertyChanging("customerID");
                    _customerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("customerID");
                    OncustomerIDChanged();
                }
            }
        }
        private global::System.Int64 _customerID;
        partial void OncustomerIDChanging(global::System.Int64 value);
        partial void OncustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customerName
        {
            get
            {
                return _customerName;
            }
            set
            {
                if (_customerName != value)
                {
                    OncustomerNameChanging(value);
                    ReportPropertyChanging("customerName");
                    _customerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("customerName");
                    OncustomerNameChanged();
                }
            }
        }
        private global::System.String _customerName;
        partial void OncustomerNameChanging(global::System.String value);
        partial void OncustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IDNumber
        {
            get
            {
                return _IDNumber;
            }
            set
            {
                if (_IDNumber != value)
                {
                    OnIDNumberChanging(value);
                    ReportPropertyChanging("IDNumber");
                    _IDNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IDNumber");
                    OnIDNumberChanged();
                }
            }
        }
        private global::System.String _IDNumber;
        partial void OnIDNumberChanging(global::System.String value);
        partial void OnIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mothersName
        {
            get
            {
                return _mothersName;
            }
            set
            {
                OnmothersNameChanging(value);
                ReportPropertyChanging("mothersName");
                _mothersName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mothersName");
                OnmothersNameChanged();
            }
        }
        private global::System.String _mothersName;
        partial void OnmothersNameChanging(global::System.String value);
        partial void OnmothersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                OncityIDChanging(value);
                ReportPropertyChanging("cityID");
                _cityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cityID");
                OncityIDChanged();
            }
        }
        private Nullable<global::System.Int64> _cityID;
        partial void OncityIDChanging(Nullable<global::System.Int64> value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerAddress
        {
            get
            {
                return _customerAddress;
            }
            set
            {
                OncustomerAddressChanging(value);
                ReportPropertyChanging("customerAddress");
                _customerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerAddress");
                OncustomerAddressChanged();
            }
        }
        private global::System.String _customerAddress;
        partial void OncustomerAddressChanging(global::System.String value);
        partial void OncustomerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerPhone
        {
            get
            {
                return _customerPhone;
            }
            set
            {
                OncustomerPhoneChanging(value);
                ReportPropertyChanging("customerPhone");
                _customerPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerPhone");
                OncustomerPhoneChanged();
            }
        }
        private global::System.String _customerPhone;
        partial void OncustomerPhoneChanging(global::System.String value);
        partial void OncustomerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birthDate
        {
            get
            {
                return _birthDate;
            }
            set
            {
                OnbirthDateChanging(value);
                ReportPropertyChanging("birthDate");
                _birthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birthDate");
                OnbirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _birthDate;
        partial void OnbirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workPlace
        {
            get
            {
                return _workPlace;
            }
            set
            {
                OnworkPlaceChanging(value);
                ReportPropertyChanging("workPlace");
                _workPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("workPlace");
                OnworkPlaceChanged();
            }
        }
        private global::System.String _workPlace;
        partial void OnworkPlaceChanging(global::System.String value);
        partial void OnworkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isFirm
        {
            get
            {
                return _isFirm;
            }
            set
            {
                if (_isFirm != value)
                {
                    OnisFirmChanging(value);
                    ReportPropertyChanging("isFirm");
                    _isFirm = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isFirm");
                    OnisFirmChanged();
                }
            }
        }
        private global::System.Boolean _isFirm;
        partial void OnisFirmChanging(global::System.Boolean value);
        partial void OnisFirmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String problems
        {
            get
            {
                return _problems;
            }
            set
            {
                OnproblemsChanging(value);
                ReportPropertyChanging("problems");
                _problems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("problems");
                OnproblemsChanged();
            }
        }
        private global::System.String _problems;
        partial void OnproblemsChanging(global::System.String value);
        partial void OnproblemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> defaultDiscount
        {
            get
            {
                return _defaultDiscount;
            }
            set
            {
                OndefaultDiscountChanging(value);
                ReportPropertyChanging("defaultDiscount");
                _defaultDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultDiscount");
                OndefaultDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _defaultDiscount;
        partial void OndefaultDiscountChanging(Nullable<global::System.Double> value);
        partial void OndefaultDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rentCounter
        {
            get
            {
                return _rentCounter;
            }
            set
            {
                if (_rentCounter != value)
                {
                    OnrentCounterChanging(value);
                    ReportPropertyChanging("rentCounter");
                    _rentCounter = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rentCounter");
                    OnrentCounterChanged();
                }
            }
        }
        private global::System.Int32 _rentCounter;
        partial void OnrentCounterChanging(global::System.Int32 value);
        partial void OnrentCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 serviceCounter
        {
            get
            {
                return _serviceCounter;
            }
            set
            {
                if (_serviceCounter != value)
                {
                    OnserviceCounterChanging(value);
                    ReportPropertyChanging("serviceCounter");
                    _serviceCounter = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serviceCounter");
                    OnserviceCounterChanged();
                }
            }
        }
        private global::System.Int32 _serviceCounter;
        partial void OnserviceCounterChanging(global::System.Int32 value);
        partial void OnserviceCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean customerDeleted
        {
            get
            {
                return _customerDeleted;
            }
            set
            {
                if (_customerDeleted != value)
                {
                    OncustomerDeletedChanging(value);
                    ReportPropertyChanging("customerDeleted");
                    _customerDeleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("customerDeleted");
                    OncustomerDeletedChanged();
                }
            }
        }
        private global::System.Boolean _customerDeleted;
        partial void OncustomerDeletedChanging(global::System.Boolean value);
        partial void OncustomerDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String postalCode
        {
            get
            {
                return _postalCode;
            }
            set
            {
                OnpostalCodeChanging(value);
                ReportPropertyChanging("postalCode");
                _postalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("postalCode");
                OnpostalCodeChanged();
            }
        }
        private global::System.String _postalCode;
        partial void OnpostalCodeChanging(global::System.String value);
        partial void OnpostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> cityDeleted
        {
            get
            {
                return _cityDeleted;
            }
            set
            {
                OncityDeletedChanging(value);
                ReportPropertyChanging("cityDeleted");
                _cityDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cityDeleted");
                OncityDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _cityDeleted;
        partial void OncityDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OncityDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="ErrorTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorTypes object.
        /// </summary>
        /// <param name="errorTypeID">Initial value of the errorTypeID property.</param>
        /// <param name="errorType">Initial value of the errorType property.</param>
        public static ErrorTypes CreateErrorTypes(global::System.Int64 errorTypeID, global::System.String errorType)
        {
            ErrorTypes errorTypes = new ErrorTypes();
            errorTypes.errorTypeID = errorTypeID;
            errorTypes.errorType = errorType;
            return errorTypes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 errorTypeID
        {
            get
            {
                return _errorTypeID;
            }
            set
            {
                if (_errorTypeID != value)
                {
                    OnerrorTypeIDChanging(value);
                    ReportPropertyChanging("errorTypeID");
                    _errorTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("errorTypeID");
                    OnerrorTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _errorTypeID;
        partial void OnerrorTypeIDChanging(global::System.Int64 value);
        partial void OnerrorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String errorType
        {
            get
            {
                return _errorType;
            }
            set
            {
                OnerrorTypeChanging(value);
                ReportPropertyChanging("errorType");
                _errorType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("errorType");
                OnerrorTypeChanged();
            }
        }
        private global::System.String _errorType;
        partial void OnerrorTypeChanging(global::System.String value);
        partial void OnerrorTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_ServiceWorksheets_ErrorTypes", "ServiceWorksheets")]
        public EntityCollection<ServiceWorksheets> ServiceWorksheets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceWorksheets>("dbGyorokModel.FK_ServiceWorksheets_ErrorTypes", "ServiceWorksheets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceWorksheets>("dbGyorokModel.FK_ServiceWorksheets_ErrorTypes", "ServiceWorksheets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="Parts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parts object.
        /// </summary>
        /// <param name="partID">Initial value of the partID property.</param>
        /// <param name="serviceID">Initial value of the serviceID property.</param>
        /// <param name="partName">Initial value of the partName property.</param>
        /// <param name="partPrice">Initial value of the partPrice property.</param>
        /// <param name="partQuantity">Initial value of the partQuantity property.</param>
        /// <param name="mustOrder">Initial value of the mustOrder property.</param>
        public static Parts CreateParts(global::System.Int64 partID, global::System.Int64 serviceID, global::System.String partName, global::System.Int64 partPrice, global::System.Int32 partQuantity, global::System.Boolean mustOrder)
        {
            Parts parts = new Parts();
            parts.partID = partID;
            parts.serviceID = serviceID;
            parts.partName = partName;
            parts.partPrice = partPrice;
            parts.partQuantity = partQuantity;
            parts.mustOrder = mustOrder;
            return parts;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 partID
        {
            get
            {
                return _partID;
            }
            set
            {
                if (_partID != value)
                {
                    OnpartIDChanging(value);
                    ReportPropertyChanging("partID");
                    _partID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("partID");
                    OnpartIDChanged();
                }
            }
        }
        private global::System.Int64 _partID;
        partial void OnpartIDChanging(global::System.Int64 value);
        partial void OnpartIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 serviceID
        {
            get
            {
                return _serviceID;
            }
            set
            {
                OnserviceIDChanging(value);
                ReportPropertyChanging("serviceID");
                _serviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceID");
                OnserviceIDChanged();
            }
        }
        private global::System.Int64 _serviceID;
        partial void OnserviceIDChanging(global::System.Int64 value);
        partial void OnserviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String partName
        {
            get
            {
                return _partName;
            }
            set
            {
                OnpartNameChanging(value);
                ReportPropertyChanging("partName");
                _partName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("partName");
                OnpartNameChanged();
            }
        }
        private global::System.String _partName;
        partial void OnpartNameChanging(global::System.String value);
        partial void OnpartNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partManufacturer
        {
            get
            {
                return _partManufacturer;
            }
            set
            {
                OnpartManufacturerChanging(value);
                ReportPropertyChanging("partManufacturer");
                _partManufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partManufacturer");
                OnpartManufacturerChanged();
            }
        }
        private global::System.String _partManufacturer;
        partial void OnpartManufacturerChanging(global::System.String value);
        partial void OnpartManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String partIDNumber
        {
            get
            {
                return _partIDNumber;
            }
            set
            {
                OnpartIDNumberChanging(value);
                ReportPropertyChanging("partIDNumber");
                _partIDNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("partIDNumber");
                OnpartIDNumberChanged();
            }
        }
        private global::System.String _partIDNumber;
        partial void OnpartIDNumberChanging(global::System.String value);
        partial void OnpartIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 partPrice
        {
            get
            {
                return _partPrice;
            }
            set
            {
                OnpartPriceChanging(value);
                ReportPropertyChanging("partPrice");
                _partPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("partPrice");
                OnpartPriceChanged();
            }
        }
        private global::System.Int64 _partPrice;
        partial void OnpartPriceChanging(global::System.Int64 value);
        partial void OnpartPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 partQuantity
        {
            get
            {
                return _partQuantity;
            }
            set
            {
                OnpartQuantityChanging(value);
                ReportPropertyChanging("partQuantity");
                _partQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("partQuantity");
                OnpartQuantityChanged();
            }
        }
        private global::System.Int32 _partQuantity;
        partial void OnpartQuantityChanging(global::System.Int32 value);
        partial void OnpartQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean mustOrder
        {
            get
            {
                return _mustOrder;
            }
            set
            {
                OnmustOrderChanging(value);
                ReportPropertyChanging("mustOrder");
                _mustOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mustOrder");
                OnmustOrderChanged();
            }
        }
        private global::System.Boolean _mustOrder;
        partial void OnmustOrderChanging(global::System.Boolean value);
        partial void OnmustOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Parts_ServiceWorksheets", "ServiceWorksheets")]
        public ServiceWorksheets ServiceWorksheets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceWorksheets>("dbGyorokModel.FK_Parts_ServiceWorksheets", "ServiceWorksheets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceWorksheets>("dbGyorokModel.FK_Parts_ServiceWorksheets", "ServiceWorksheets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceWorksheets> ServiceWorksheetsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceWorksheets>("dbGyorokModel.FK_Parts_ServiceWorksheets", "ServiceWorksheets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceWorksheets>("dbGyorokModel.FK_Parts_ServiceWorksheets", "ServiceWorksheets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="PayTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayTypes object.
        /// </summary>
        /// <param name="payTypeID">Initial value of the payTypeID property.</param>
        /// <param name="payTypeName">Initial value of the payTypeName property.</param>
        public static PayTypes CreatePayTypes(global::System.Int64 payTypeID, global::System.String payTypeName)
        {
            PayTypes payTypes = new PayTypes();
            payTypes.payTypeID = payTypeID;
            payTypes.payTypeName = payTypeName;
            return payTypes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 payTypeID
        {
            get
            {
                return _payTypeID;
            }
            set
            {
                if (_payTypeID != value)
                {
                    OnpayTypeIDChanging(value);
                    ReportPropertyChanging("payTypeID");
                    _payTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("payTypeID");
                    OnpayTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _payTypeID;
        partial void OnpayTypeIDChanging(global::System.Int64 value);
        partial void OnpayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String payTypeName
        {
            get
            {
                return _payTypeName;
            }
            set
            {
                OnpayTypeNameChanging(value);
                ReportPropertyChanging("payTypeName");
                _payTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("payTypeName");
                OnpayTypeNameChanged();
            }
        }
        private global::System.String _payTypeName;
        partial void OnpayTypeNameChanging(global::System.String value);
        partial void OnpayTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_PayTypes", "Rentals")]
        public EntityCollection<Rentals> Rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_PayTypes", "Rentals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_PayTypes", "Rentals", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="RentalGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentalGroups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentalGroups object.
        /// </summary>
        /// <param name="groupID">Initial value of the groupID property.</param>
        public static RentalGroups CreateRentalGroups(global::System.Int64 groupID)
        {
            RentalGroups rentalGroups = new RentalGroups();
            rentalGroups.groupID = groupID;
            return rentalGroups;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 groupID
        {
            get
            {
                return _groupID;
            }
            set
            {
                if (_groupID != value)
                {
                    OngroupIDChanging(value);
                    ReportPropertyChanging("groupID");
                    _groupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("groupID");
                    OngroupIDChanged();
                }
            }
        }
        private global::System.Int64 _groupID;
        partial void OngroupIDChanging(global::System.Int64 value);
        partial void OngroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> deposit
        {
            get
            {
                return _deposit;
            }
            set
            {
                OndepositChanging(value);
                ReportPropertyChanging("deposit");
                _deposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deposit");
                OndepositChanged();
            }
        }
        private Nullable<global::System.Int64> _deposit;
        partial void OndepositChanging(Nullable<global::System.Int64> value);
        partial void OndepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isOpen
        {
            get
            {
                return _isOpen;
            }
            set
            {
                OnisOpenChanging(value);
                ReportPropertyChanging("isOpen");
                _isOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isOpen");
                OnisOpenChanged();
            }
        }
        private Nullable<global::System.Boolean> _isOpen;
        partial void OnisOpenChanging(Nullable<global::System.Boolean> value);
        partial void OnisOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_RentalGroups", "Rentals")]
        public EntityCollection<Rentals> Rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_RentalGroups", "Rentals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_RentalGroups", "Rentals", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="Rentals")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rentals : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rentals object.
        /// </summary>
        /// <param name="rentalID">Initial value of the rentalID property.</param>
        /// <param name="customerID">Initial value of the customerID property.</param>
        /// <param name="toolID">Initial value of the toolID property.</param>
        /// <param name="rentalStart">Initial value of the rentalStart property.</param>
        /// <param name="rentalEnd">Initial value of the rentalEnd property.</param>
        /// <param name="actualPrice">Initial value of the actualPrice property.</param>
        /// <param name="payTypeID">Initial value of the payTypeID property.</param>
        /// <param name="discount">Initial value of the discount property.</param>
        /// <param name="isClean">Initial value of the isClean property.</param>
        /// <param name="groupID">Initial value of the groupID property.</param>
        /// <param name="isPaid">Initial value of the isPaid property.</param>
        public static Rentals CreateRentals(global::System.Int64 rentalID, global::System.Int64 customerID, global::System.Int64 toolID, global::System.DateTime rentalStart, global::System.DateTime rentalEnd, global::System.Int64 actualPrice, global::System.Int64 payTypeID, global::System.Single discount, global::System.Boolean isClean, global::System.Int64 groupID, global::System.Boolean isPaid)
        {
            Rentals rentals = new Rentals();
            rentals.rentalID = rentalID;
            rentals.customerID = customerID;
            rentals.toolID = toolID;
            rentals.rentalStart = rentalStart;
            rentals.rentalEnd = rentalEnd;
            rentals.actualPrice = actualPrice;
            rentals.payTypeID = payTypeID;
            rentals.discount = discount;
            rentals.isClean = isClean;
            rentals.groupID = groupID;
            rentals.isPaid = isPaid;
            return rentals;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 rentalID
        {
            get
            {
                return _rentalID;
            }
            set
            {
                if (_rentalID != value)
                {
                    OnrentalIDChanging(value);
                    ReportPropertyChanging("rentalID");
                    _rentalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rentalID");
                    OnrentalIDChanged();
                }
            }
        }
        private global::System.Int64 _rentalID;
        partial void OnrentalIDChanging(global::System.Int64 value);
        partial void OnrentalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerID
        {
            get
            {
                return _customerID;
            }
            set
            {
                OncustomerIDChanging(value);
                ReportPropertyChanging("customerID");
                _customerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("customerID");
                OncustomerIDChanged();
            }
        }
        private global::System.Int64 _customerID;
        partial void OncustomerIDChanging(global::System.Int64 value);
        partial void OncustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> contactID
        {
            get
            {
                return _contactID;
            }
            set
            {
                OncontactIDChanging(value);
                ReportPropertyChanging("contactID");
                _contactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contactID");
                OncontactIDChanged();
            }
        }
        private Nullable<global::System.Int64> _contactID;
        partial void OncontactIDChanging(Nullable<global::System.Int64> value);
        partial void OncontactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 toolID
        {
            get
            {
                return _toolID;
            }
            set
            {
                OntoolIDChanging(value);
                ReportPropertyChanging("toolID");
                _toolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("toolID");
                OntoolIDChanged();
            }
        }
        private global::System.Int64 _toolID;
        partial void OntoolIDChanging(global::System.Int64 value);
        partial void OntoolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime rentalStart
        {
            get
            {
                return _rentalStart;
            }
            set
            {
                OnrentalStartChanging(value);
                ReportPropertyChanging("rentalStart");
                _rentalStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentalStart");
                OnrentalStartChanged();
            }
        }
        private global::System.DateTime _rentalStart;
        partial void OnrentalStartChanging(global::System.DateTime value);
        partial void OnrentalStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime rentalEnd
        {
            get
            {
                return _rentalEnd;
            }
            set
            {
                OnrentalEndChanging(value);
                ReportPropertyChanging("rentalEnd");
                _rentalEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentalEnd");
                OnrentalEndChanged();
            }
        }
        private global::System.DateTime _rentalEnd;
        partial void OnrentalEndChanging(global::System.DateTime value);
        partial void OnrentalEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> rentalRealEnd
        {
            get
            {
                return _rentalRealEnd;
            }
            set
            {
                OnrentalRealEndChanging(value);
                ReportPropertyChanging("rentalRealEnd");
                _rentalRealEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentalRealEnd");
                OnrentalRealEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _rentalRealEnd;
        partial void OnrentalRealEndChanging(Nullable<global::System.DateTime> value);
        partial void OnrentalRealEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 actualPrice
        {
            get
            {
                return _actualPrice;
            }
            set
            {
                OnactualPriceChanging(value);
                ReportPropertyChanging("actualPrice");
                _actualPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("actualPrice");
                OnactualPriceChanged();
            }
        }
        private global::System.Int64 _actualPrice;
        partial void OnactualPriceChanging(global::System.Int64 value);
        partial void OnactualPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 payTypeID
        {
            get
            {
                return _payTypeID;
            }
            set
            {
                OnpayTypeIDChanging(value);
                ReportPropertyChanging("payTypeID");
                _payTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payTypeID");
                OnpayTypeIDChanged();
            }
        }
        private global::System.Int64 _payTypeID;
        partial void OnpayTypeIDChanging(global::System.Int64 value);
        partial void OnpayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single discount
        {
            get
            {
                return _discount;
            }
            set
            {
                OndiscountChanging(value);
                ReportPropertyChanging("discount");
                _discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("discount");
                OndiscountChanged();
            }
        }
        private global::System.Single _discount;
        partial void OndiscountChanging(global::System.Single value);
        partial void OndiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isClean
        {
            get
            {
                return _isClean;
            }
            set
            {
                OnisCleanChanging(value);
                ReportPropertyChanging("isClean");
                _isClean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isClean");
                OnisCleanChanged();
            }
        }
        private global::System.Boolean _isClean;
        partial void OnisCleanChanging(global::System.Boolean value);
        partial void OnisCleanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 groupID
        {
            get
            {
                return _groupID;
            }
            set
            {
                OngroupIDChanging(value);
                ReportPropertyChanging("groupID");
                _groupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("groupID");
                OngroupIDChanged();
            }
        }
        private global::System.Int64 _groupID;
        partial void OngroupIDChanging(global::System.Int64 value);
        partial void OngroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPaid
        {
            get
            {
                return _isPaid;
            }
            set
            {
                OnisPaidChanging(value);
                ReportPropertyChanging("isPaid");
                _isPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPaid");
                OnisPaidChanged();
            }
        }
        private global::System.Boolean _isPaid;
        partial void OnisPaidChanging(global::System.Boolean value);
        partial void OnisPaidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_Customers1", "Customers")]
        public Customers Customers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers1", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers1", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> Customers1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers1", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("dbGyorokModel.FK_Rentals_Customers1", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_PayTypes", "PayTypes")]
        public PayTypes PayTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayTypes>("dbGyorokModel.FK_Rentals_PayTypes", "PayTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayTypes>("dbGyorokModel.FK_Rentals_PayTypes", "PayTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayTypes> PayTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayTypes>("dbGyorokModel.FK_Rentals_PayTypes", "PayTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayTypes>("dbGyorokModel.FK_Rentals_PayTypes", "PayTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_RentalGroups", "RentalGroups")]
        public RentalGroups RentalGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalGroups>("dbGyorokModel.FK_Rentals_RentalGroups", "RentalGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalGroups>("dbGyorokModel.FK_Rentals_RentalGroups", "RentalGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentalGroups> RentalGroupsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalGroups>("dbGyorokModel.FK_Rentals_RentalGroups", "RentalGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentalGroups>("dbGyorokModel.FK_Rentals_RentalGroups", "RentalGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_Tools", "Tools")]
        public Tools Tools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tools>("dbGyorokModel.FK_Rentals_Tools", "Tools").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tools>("dbGyorokModel.FK_Rentals_Tools", "Tools").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tools> ToolsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tools>("dbGyorokModel.FK_Rentals_Tools", "Tools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tools>("dbGyorokModel.FK_Rentals_Tools", "Tools", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="RentalSum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentalSum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentalSum object.
        /// </summary>
        /// <param name="customerID">Initial value of the customerID property.</param>
        /// <param name="customerName">Initial value of the customerName property.</param>
        /// <param name="cIDNumber">Initial value of the cIDNumber property.</param>
        /// <param name="isFirm">Initial value of the isFirm property.</param>
        /// <param name="toolID">Initial value of the toolID property.</param>
        /// <param name="toolName">Initial value of the toolName property.</param>
        /// <param name="tIDNumber">Initial value of the tIDNumber property.</param>
        /// <param name="rentalStart">Initial value of the rentalStart property.</param>
        /// <param name="rentalEnd">Initial value of the rentalEnd property.</param>
        /// <param name="actualPrice">Initial value of the actualPrice property.</param>
        /// <param name="discount">Initial value of the discount property.</param>
        /// <param name="groupID">Initial value of the groupID property.</param>
        /// <param name="rentalID">Initial value of the rentalID property.</param>
        /// <param name="isPaid">Initial value of the isPaid property.</param>
        /// <param name="isClean">Initial value of the isClean property.</param>
        /// <param name="payTypeID">Initial value of the payTypeID property.</param>
        /// <param name="cRentCounter">Initial value of the cRentCounter property.</param>
        /// <param name="serviceCounter">Initial value of the serviceCounter property.</param>
        /// <param name="rentPrice">Initial value of the rentPrice property.</param>
        /// <param name="toolStatusID">Initial value of the toolStatusID property.</param>
        /// <param name="fromDate">Initial value of the fromDate property.</param>
        /// <param name="tRentCounter">Initial value of the tRentCounter property.</param>
        /// <param name="tIsDeleted">Initial value of the tIsDeleted property.</param>
        /// <param name="cIsDeleted">Initial value of the cIsDeleted property.</param>
        public static RentalSum CreateRentalSum(global::System.Int64 customerID, global::System.String customerName, global::System.String cIDNumber, global::System.Boolean isFirm, global::System.Int64 toolID, global::System.String toolName, global::System.String tIDNumber, global::System.DateTime rentalStart, global::System.DateTime rentalEnd, global::System.Int64 actualPrice, global::System.Single discount, global::System.Int64 groupID, global::System.Int64 rentalID, global::System.Boolean isPaid, global::System.Boolean isClean, global::System.Int64 payTypeID, global::System.Int32 cRentCounter, global::System.Int32 serviceCounter, global::System.Int64 rentPrice, global::System.Int64 toolStatusID, global::System.DateTime fromDate, global::System.Int32 tRentCounter, global::System.Boolean tIsDeleted, global::System.Boolean cIsDeleted)
        {
            RentalSum rentalSum = new RentalSum();
            rentalSum.customerID = customerID;
            rentalSum.customerName = customerName;
            rentalSum.cIDNumber = cIDNumber;
            rentalSum.isFirm = isFirm;
            rentalSum.toolID = toolID;
            rentalSum.toolName = toolName;
            rentalSum.tIDNumber = tIDNumber;
            rentalSum.rentalStart = rentalStart;
            rentalSum.rentalEnd = rentalEnd;
            rentalSum.actualPrice = actualPrice;
            rentalSum.discount = discount;
            rentalSum.groupID = groupID;
            rentalSum.rentalID = rentalID;
            rentalSum.isPaid = isPaid;
            rentalSum.isClean = isClean;
            rentalSum.payTypeID = payTypeID;
            rentalSum.cRentCounter = cRentCounter;
            rentalSum.serviceCounter = serviceCounter;
            rentalSum.rentPrice = rentPrice;
            rentalSum.toolStatusID = toolStatusID;
            rentalSum.fromDate = fromDate;
            rentalSum.tRentCounter = tRentCounter;
            rentalSum.tIsDeleted = tIsDeleted;
            rentalSum.cIsDeleted = cIsDeleted;
            return rentalSum;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerID
        {
            get
            {
                return _customerID;
            }
            set
            {
                if (_customerID != value)
                {
                    OncustomerIDChanging(value);
                    ReportPropertyChanging("customerID");
                    _customerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("customerID");
                    OncustomerIDChanged();
                }
            }
        }
        private global::System.Int64 _customerID;
        partial void OncustomerIDChanging(global::System.Int64 value);
        partial void OncustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customerName
        {
            get
            {
                return _customerName;
            }
            set
            {
                if (_customerName != value)
                {
                    OncustomerNameChanging(value);
                    ReportPropertyChanging("customerName");
                    _customerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("customerName");
                    OncustomerNameChanged();
                }
            }
        }
        private global::System.String _customerName;
        partial void OncustomerNameChanging(global::System.String value);
        partial void OncustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cIDNumber
        {
            get
            {
                return _cIDNumber;
            }
            set
            {
                if (_cIDNumber != value)
                {
                    OncIDNumberChanging(value);
                    ReportPropertyChanging("cIDNumber");
                    _cIDNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cIDNumber");
                    OncIDNumberChanged();
                }
            }
        }
        private global::System.String _cIDNumber;
        partial void OncIDNumberChanging(global::System.String value);
        partial void OncIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mothersName
        {
            get
            {
                return _mothersName;
            }
            set
            {
                OnmothersNameChanging(value);
                ReportPropertyChanging("mothersName");
                _mothersName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mothersName");
                OnmothersNameChanged();
            }
        }
        private global::System.String _mothersName;
        partial void OnmothersNameChanging(global::System.String value);
        partial void OnmothersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerAddress
        {
            get
            {
                return _customerAddress;
            }
            set
            {
                OncustomerAddressChanging(value);
                ReportPropertyChanging("customerAddress");
                _customerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerAddress");
                OncustomerAddressChanged();
            }
        }
        private global::System.String _customerAddress;
        partial void OncustomerAddressChanging(global::System.String value);
        partial void OncustomerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerPhone
        {
            get
            {
                return _customerPhone;
            }
            set
            {
                OncustomerPhoneChanging(value);
                ReportPropertyChanging("customerPhone");
                _customerPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerPhone");
                OncustomerPhoneChanged();
            }
        }
        private global::System.String _customerPhone;
        partial void OncustomerPhoneChanging(global::System.String value);
        partial void OncustomerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birthDate
        {
            get
            {
                return _birthDate;
            }
            set
            {
                OnbirthDateChanging(value);
                ReportPropertyChanging("birthDate");
                _birthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birthDate");
                OnbirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _birthDate;
        partial void OnbirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workPlace
        {
            get
            {
                return _workPlace;
            }
            set
            {
                OnworkPlaceChanging(value);
                ReportPropertyChanging("workPlace");
                _workPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("workPlace");
                OnworkPlaceChanged();
            }
        }
        private global::System.String _workPlace;
        partial void OnworkPlaceChanging(global::System.String value);
        partial void OnworkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isFirm
        {
            get
            {
                return _isFirm;
            }
            set
            {
                if (_isFirm != value)
                {
                    OnisFirmChanging(value);
                    ReportPropertyChanging("isFirm");
                    _isFirm = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isFirm");
                    OnisFirmChanged();
                }
            }
        }
        private global::System.Boolean _isFirm;
        partial void OnisFirmChanging(global::System.Boolean value);
        partial void OnisFirmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String problems
        {
            get
            {
                return _problems;
            }
            set
            {
                OnproblemsChanging(value);
                ReportPropertyChanging("problems");
                _problems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("problems");
                OnproblemsChanged();
            }
        }
        private global::System.String _problems;
        partial void OnproblemsChanging(global::System.String value);
        partial void OnproblemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 toolID
        {
            get
            {
                return _toolID;
            }
            set
            {
                if (_toolID != value)
                {
                    OntoolIDChanging(value);
                    ReportPropertyChanging("toolID");
                    _toolID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("toolID");
                    OntoolIDChanged();
                }
            }
        }
        private global::System.Int64 _toolID;
        partial void OntoolIDChanging(global::System.Int64 value);
        partial void OntoolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String toolName
        {
            get
            {
                return _toolName;
            }
            set
            {
                if (_toolName != value)
                {
                    OntoolNameChanging(value);
                    ReportPropertyChanging("toolName");
                    _toolName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("toolName");
                    OntoolNameChanged();
                }
            }
        }
        private global::System.String _toolName;
        partial void OntoolNameChanging(global::System.String value);
        partial void OntoolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String toolManufacturer
        {
            get
            {
                return _toolManufacturer;
            }
            set
            {
                OntoolManufacturerChanging(value);
                ReportPropertyChanging("toolManufacturer");
                _toolManufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("toolManufacturer");
                OntoolManufacturerChanged();
            }
        }
        private global::System.String _toolManufacturer;
        partial void OntoolManufacturerChanging(global::System.String value);
        partial void OntoolManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tIDNumber
        {
            get
            {
                return _tIDNumber;
            }
            set
            {
                if (_tIDNumber != value)
                {
                    OntIDNumberChanging(value);
                    ReportPropertyChanging("tIDNumber");
                    _tIDNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tIDNumber");
                    OntIDNumberChanged();
                }
            }
        }
        private global::System.String _tIDNumber;
        partial void OntIDNumberChanging(global::System.String value);
        partial void OntIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String serialNumber
        {
            get
            {
                return _serialNumber;
            }
            set
            {
                OnserialNumberChanging(value);
                ReportPropertyChanging("serialNumber");
                _serialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("serialNumber");
                OnserialNumberChanged();
            }
        }
        private global::System.String _serialNumber;
        partial void OnserialNumberChanging(global::System.String value);
        partial void OnserialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactName
        {
            get
            {
                return _contactName;
            }
            set
            {
                OncontactNameChanging(value);
                ReportPropertyChanging("contactName");
                _contactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactName");
                OncontactNameChanged();
            }
        }
        private global::System.String _contactName;
        partial void OncontactNameChanging(global::System.String value);
        partial void OncontactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime rentalStart
        {
            get
            {
                return _rentalStart;
            }
            set
            {
                if (_rentalStart != value)
                {
                    OnrentalStartChanging(value);
                    ReportPropertyChanging("rentalStart");
                    _rentalStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rentalStart");
                    OnrentalStartChanged();
                }
            }
        }
        private global::System.DateTime _rentalStart;
        partial void OnrentalStartChanging(global::System.DateTime value);
        partial void OnrentalStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime rentalEnd
        {
            get
            {
                return _rentalEnd;
            }
            set
            {
                if (_rentalEnd != value)
                {
                    OnrentalEndChanging(value);
                    ReportPropertyChanging("rentalEnd");
                    _rentalEnd = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rentalEnd");
                    OnrentalEndChanged();
                }
            }
        }
        private global::System.DateTime _rentalEnd;
        partial void OnrentalEndChanging(global::System.DateTime value);
        partial void OnrentalEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 actualPrice
        {
            get
            {
                return _actualPrice;
            }
            set
            {
                if (_actualPrice != value)
                {
                    OnactualPriceChanging(value);
                    ReportPropertyChanging("actualPrice");
                    _actualPrice = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("actualPrice");
                    OnactualPriceChanged();
                }
            }
        }
        private global::System.Int64 _actualPrice;
        partial void OnactualPriceChanging(global::System.Int64 value);
        partial void OnactualPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single discount
        {
            get
            {
                return _discount;
            }
            set
            {
                if (_discount != value)
                {
                    OndiscountChanging(value);
                    ReportPropertyChanging("discount");
                    _discount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("discount");
                    OndiscountChanged();
                }
            }
        }
        private global::System.Single _discount;
        partial void OndiscountChanging(global::System.Single value);
        partial void OndiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 groupID
        {
            get
            {
                return _groupID;
            }
            set
            {
                if (_groupID != value)
                {
                    OngroupIDChanging(value);
                    ReportPropertyChanging("groupID");
                    _groupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("groupID");
                    OngroupIDChanged();
                }
            }
        }
        private global::System.Int64 _groupID;
        partial void OngroupIDChanging(global::System.Int64 value);
        partial void OngroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 rentalID
        {
            get
            {
                return _rentalID;
            }
            set
            {
                if (_rentalID != value)
                {
                    OnrentalIDChanging(value);
                    ReportPropertyChanging("rentalID");
                    _rentalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rentalID");
                    OnrentalIDChanged();
                }
            }
        }
        private global::System.Int64 _rentalID;
        partial void OnrentalIDChanging(global::System.Int64 value);
        partial void OnrentalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPaid
        {
            get
            {
                return _isPaid;
            }
            set
            {
                if (_isPaid != value)
                {
                    OnisPaidChanging(value);
                    ReportPropertyChanging("isPaid");
                    _isPaid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isPaid");
                    OnisPaidChanged();
                }
            }
        }
        private global::System.Boolean _isPaid;
        partial void OnisPaidChanging(global::System.Boolean value);
        partial void OnisPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> rentalRealEnd
        {
            get
            {
                return _rentalRealEnd;
            }
            set
            {
                OnrentalRealEndChanging(value);
                ReportPropertyChanging("rentalRealEnd");
                _rentalRealEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentalRealEnd");
                OnrentalRealEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _rentalRealEnd;
        partial void OnrentalRealEndChanging(Nullable<global::System.DateTime> value);
        partial void OnrentalRealEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isClean
        {
            get
            {
                return _isClean;
            }
            set
            {
                if (_isClean != value)
                {
                    OnisCleanChanging(value);
                    ReportPropertyChanging("isClean");
                    _isClean = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isClean");
                    OnisCleanChanged();
                }
            }
        }
        private global::System.Boolean _isClean;
        partial void OnisCleanChanging(global::System.Boolean value);
        partial void OnisCleanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 payTypeID
        {
            get
            {
                return _payTypeID;
            }
            set
            {
                if (_payTypeID != value)
                {
                    OnpayTypeIDChanging(value);
                    ReportPropertyChanging("payTypeID");
                    _payTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("payTypeID");
                    OnpayTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _payTypeID;
        partial void OnpayTypeIDChanging(global::System.Int64 value);
        partial void OnpayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> defaultDiscount
        {
            get
            {
                return _defaultDiscount;
            }
            set
            {
                OndefaultDiscountChanging(value);
                ReportPropertyChanging("defaultDiscount");
                _defaultDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultDiscount");
                OndefaultDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _defaultDiscount;
        partial void OndefaultDiscountChanging(Nullable<global::System.Double> value);
        partial void OndefaultDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cRentCounter
        {
            get
            {
                return _cRentCounter;
            }
            set
            {
                if (_cRentCounter != value)
                {
                    OncRentCounterChanging(value);
                    ReportPropertyChanging("cRentCounter");
                    _cRentCounter = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cRentCounter");
                    OncRentCounterChanged();
                }
            }
        }
        private global::System.Int32 _cRentCounter;
        partial void OncRentCounterChanging(global::System.Int32 value);
        partial void OncRentCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 serviceCounter
        {
            get
            {
                return _serviceCounter;
            }
            set
            {
                if (_serviceCounter != value)
                {
                    OnserviceCounterChanging(value);
                    ReportPropertyChanging("serviceCounter");
                    _serviceCounter = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serviceCounter");
                    OnserviceCounterChanged();
                }
            }
        }
        private global::System.Int32 _serviceCounter;
        partial void OnserviceCounterChanging(global::System.Int32 value);
        partial void OnserviceCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 rentPrice
        {
            get
            {
                return _rentPrice;
            }
            set
            {
                if (_rentPrice != value)
                {
                    OnrentPriceChanging(value);
                    ReportPropertyChanging("rentPrice");
                    _rentPrice = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rentPrice");
                    OnrentPriceChanged();
                }
            }
        }
        private global::System.Int64 _rentPrice;
        partial void OnrentPriceChanging(global::System.Int64 value);
        partial void OnrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 toolStatusID
        {
            get
            {
                return _toolStatusID;
            }
            set
            {
                if (_toolStatusID != value)
                {
                    OntoolStatusIDChanging(value);
                    ReportPropertyChanging("toolStatusID");
                    _toolStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("toolStatusID");
                    OntoolStatusIDChanged();
                }
            }
        }
        private global::System.Int64 _toolStatusID;
        partial void OntoolStatusIDChanging(global::System.Int64 value);
        partial void OntoolStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime fromDate
        {
            get
            {
                return _fromDate;
            }
            set
            {
                if (_fromDate != value)
                {
                    OnfromDateChanging(value);
                    ReportPropertyChanging("fromDate");
                    _fromDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fromDate");
                    OnfromDateChanged();
                }
            }
        }
        private global::System.DateTime _fromDate;
        partial void OnfromDateChanging(global::System.DateTime value);
        partial void OnfromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> defaultDeposit
        {
            get
            {
                return _defaultDeposit;
            }
            set
            {
                OndefaultDepositChanging(value);
                ReportPropertyChanging("defaultDeposit");
                _defaultDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultDeposit");
                OndefaultDepositChanged();
            }
        }
        private Nullable<global::System.Int64> _defaultDeposit;
        partial void OndefaultDepositChanging(Nullable<global::System.Int64> value);
        partial void OndefaultDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tRentCounter
        {
            get
            {
                return _tRentCounter;
            }
            set
            {
                if (_tRentCounter != value)
                {
                    OntRentCounterChanging(value);
                    ReportPropertyChanging("tRentCounter");
                    _tRentCounter = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tRentCounter");
                    OntRentCounterChanged();
                }
            }
        }
        private global::System.Int32 _tRentCounter;
        partial void OntRentCounterChanging(global::System.Int32 value);
        partial void OntRentCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactIDNumber
        {
            get
            {
                return _contactIDNumber;
            }
            set
            {
                OncontactIDNumberChanging(value);
                ReportPropertyChanging("contactIDNumber");
                _contactIDNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactIDNumber");
                OncontactIDNumberChanged();
            }
        }
        private global::System.String _contactIDNumber;
        partial void OncontactIDNumberChanging(global::System.String value);
        partial void OncontactIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactMothersName
        {
            get
            {
                return _contactMothersName;
            }
            set
            {
                OncontactMothersNameChanging(value);
                ReportPropertyChanging("contactMothersName");
                _contactMothersName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactMothersName");
                OncontactMothersNameChanged();
            }
        }
        private global::System.String _contactMothersName;
        partial void OncontactMothersNameChanging(global::System.String value);
        partial void OncontactMothersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactAddress
        {
            get
            {
                return _contactAddress;
            }
            set
            {
                OncontactAddressChanging(value);
                ReportPropertyChanging("contactAddress");
                _contactAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactAddress");
                OncontactAddressChanged();
            }
        }
        private global::System.String _contactAddress;
        partial void OncontactAddressChanging(global::System.String value);
        partial void OncontactAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactPhone
        {
            get
            {
                return _contactPhone;
            }
            set
            {
                OncontactPhoneChanging(value);
                ReportPropertyChanging("contactPhone");
                _contactPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactPhone");
                OncontactPhoneChanged();
            }
        }
        private global::System.String _contactPhone;
        partial void OncontactPhoneChanging(global::System.String value);
        partial void OncontactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> contactBirthDate
        {
            get
            {
                return _contactBirthDate;
            }
            set
            {
                OncontactBirthDateChanging(value);
                ReportPropertyChanging("contactBirthDate");
                _contactBirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contactBirthDate");
                OncontactBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _contactBirthDate;
        partial void OncontactBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OncontactBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactWorkplace
        {
            get
            {
                return _contactWorkplace;
            }
            set
            {
                OncontactWorkplaceChanging(value);
                ReportPropertyChanging("contactWorkplace");
                _contactWorkplace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactWorkplace");
                OncontactWorkplaceChanged();
            }
        }
        private global::System.String _contactWorkplace;
        partial void OncontactWorkplaceChanging(global::System.String value);
        partial void OncontactWorkplaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactComment
        {
            get
            {
                return _contactComment;
            }
            set
            {
                OncontactCommentChanging(value);
                ReportPropertyChanging("contactComment");
                _contactComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactComment");
                OncontactCommentChanged();
            }
        }
        private global::System.String _contactComment;
        partial void OncontactCommentChanging(global::System.String value);
        partial void OncontactCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactProblems
        {
            get
            {
                return _contactProblems;
            }
            set
            {
                OncontactProblemsChanging(value);
                ReportPropertyChanging("contactProblems");
                _contactProblems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactProblems");
                OncontactProblemsChanged();
            }
        }
        private global::System.String _contactProblems;
        partial void OncontactProblemsChanging(global::System.String value);
        partial void OncontactProblemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean tIsDeleted
        {
            get
            {
                return _tIsDeleted;
            }
            set
            {
                if (_tIsDeleted != value)
                {
                    OntIsDeletedChanging(value);
                    ReportPropertyChanging("tIsDeleted");
                    _tIsDeleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tIsDeleted");
                    OntIsDeletedChanged();
                }
            }
        }
        private global::System.Boolean _tIsDeleted;
        partial void OntIsDeletedChanging(global::System.Boolean value);
        partial void OntIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean cIsDeleted
        {
            get
            {
                return _cIsDeleted;
            }
            set
            {
                if (_cIsDeleted != value)
                {
                    OncIsDeletedChanging(value);
                    ReportPropertyChanging("cIsDeleted");
                    _cIsDeleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cIsDeleted");
                    OncIsDeletedChanged();
                }
            }
        }
        private global::System.Boolean _cIsDeleted;
        partial void OncIsDeletedChanging(global::System.Boolean value);
        partial void OncIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> customerCityID
        {
            get
            {
                return _customerCityID;
            }
            set
            {
                OncustomerCityIDChanging(value);
                ReportPropertyChanging("customerCityID");
                _customerCityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("customerCityID");
                OncustomerCityIDChanged();
            }
        }
        private Nullable<global::System.Int64> _customerCityID;
        partial void OncustomerCityIDChanging(Nullable<global::System.Int64> value);
        partial void OncustomerCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerPostalCode
        {
            get
            {
                return _customerPostalCode;
            }
            set
            {
                OncustomerPostalCodeChanging(value);
                ReportPropertyChanging("customerPostalCode");
                _customerPostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerPostalCode");
                OncustomerPostalCodeChanged();
            }
        }
        private global::System.String _customerPostalCode;
        partial void OncustomerPostalCodeChanging(global::System.String value);
        partial void OncustomerPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerCity
        {
            get
            {
                return _customerCity;
            }
            set
            {
                OncustomerCityChanging(value);
                ReportPropertyChanging("customerCity");
                _customerCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerCity");
                OncustomerCityChanged();
            }
        }
        private global::System.String _customerCity;
        partial void OncustomerCityChanging(global::System.String value);
        partial void OncustomerCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> contactCityID
        {
            get
            {
                return _contactCityID;
            }
            set
            {
                OncontactCityIDChanging(value);
                ReportPropertyChanging("contactCityID");
                _contactCityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contactCityID");
                OncontactCityIDChanged();
            }
        }
        private Nullable<global::System.Int64> _contactCityID;
        partial void OncontactCityIDChanging(Nullable<global::System.Int64> value);
        partial void OncontactCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactPostalCode
        {
            get
            {
                return _contactPostalCode;
            }
            set
            {
                OncontactPostalCodeChanging(value);
                ReportPropertyChanging("contactPostalCode");
                _contactPostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactPostalCode");
                OncontactPostalCodeChanged();
            }
        }
        private global::System.String _contactPostalCode;
        partial void OncontactPostalCodeChanging(global::System.String value);
        partial void OncontactPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactCity
        {
            get
            {
                return _contactCity;
            }
            set
            {
                OncontactCityChanging(value);
                ReportPropertyChanging("contactCity");
                _contactCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactCity");
                OncontactCityChanged();
            }
        }
        private global::System.String _contactCity;
        partial void OncontactCityChanging(global::System.String value);
        partial void OncontactCityChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="ServiceGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceGroups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceGroups object.
        /// </summary>
        /// <param name="serviceGroupID">Initial value of the serviceGroupID property.</param>
        public static ServiceGroups CreateServiceGroups(global::System.Int64 serviceGroupID)
        {
            ServiceGroups serviceGroups = new ServiceGroups();
            serviceGroups.serviceGroupID = serviceGroupID;
            return serviceGroups;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 serviceGroupID
        {
            get
            {
                return _serviceGroupID;
            }
            set
            {
                if (_serviceGroupID != value)
                {
                    OnserviceGroupIDChanging(value);
                    ReportPropertyChanging("serviceGroupID");
                    _serviceGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serviceGroupID");
                    OnserviceGroupIDChanged();
                }
            }
        }
        private global::System.Int64 _serviceGroupID;
        partial void OnserviceGroupIDChanging(global::System.Int64 value);
        partial void OnserviceGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> deposit
        {
            get
            {
                return _deposit;
            }
            set
            {
                OndepositChanging(value);
                ReportPropertyChanging("deposit");
                _deposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deposit");
                OndepositChanged();
            }
        }
        private Nullable<global::System.Int64> _deposit;
        partial void OndepositChanging(Nullable<global::System.Int64> value);
        partial void OndepositChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="ServiceStatuses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceStatuses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceStatuses object.
        /// </summary>
        /// <param name="statusID">Initial value of the statusID property.</param>
        /// <param name="statusName">Initial value of the statusName property.</param>
        public static ServiceStatuses CreateServiceStatuses(global::System.Int64 statusID, global::System.String statusName)
        {
            ServiceStatuses serviceStatuses = new ServiceStatuses();
            serviceStatuses.statusID = statusID;
            serviceStatuses.statusName = statusName;
            return serviceStatuses;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statusID
        {
            get
            {
                return _statusID;
            }
            set
            {
                if (_statusID != value)
                {
                    OnstatusIDChanging(value);
                    ReportPropertyChanging("statusID");
                    _statusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("statusID");
                    OnstatusIDChanged();
                }
            }
        }
        private global::System.Int64 _statusID;
        partial void OnstatusIDChanging(global::System.Int64 value);
        partial void OnstatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String statusName
        {
            get
            {
                return _statusName;
            }
            set
            {
                OnstatusNameChanging(value);
                ReportPropertyChanging("statusName");
                _statusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("statusName");
                OnstatusNameChanged();
            }
        }
        private global::System.String _statusName;
        partial void OnstatusNameChanging(global::System.String value);
        partial void OnstatusNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_ServiceWorksheets_ServiceStatuses", "ServiceWorksheets")]
        public EntityCollection<ServiceWorksheets> ServiceWorksheets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceWorksheets>("dbGyorokModel.FK_ServiceWorksheets_ServiceStatuses", "ServiceWorksheets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceWorksheets>("dbGyorokModel.FK_ServiceWorksheets_ServiceStatuses", "ServiceWorksheets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="ServiceSum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceSum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceSum object.
        /// </summary>
        /// <param name="customerID">Initial value of the customerID property.</param>
        /// <param name="customerName">Initial value of the customerName property.</param>
        /// <param name="iDNumber">Initial value of the IDNumber property.</param>
        /// <param name="isFirm">Initial value of the isFirm property.</param>
        /// <param name="worksheetID">Initial value of the worksheetID property.</param>
        /// <param name="deviceName">Initial value of the deviceName property.</param>
        /// <param name="hasWarranty">Initial value of the hasWarranty property.</param>
        /// <param name="errorTypeID">Initial value of the errorTypeID property.</param>
        /// <param name="statusID">Initial value of the statusID property.</param>
        /// <param name="serviceStart">Initial value of the serviceStart property.</param>
        /// <param name="isPaid">Initial value of the isPaid property.</param>
        /// <param name="discount">Initial value of the discount property.</param>
        /// <param name="statusName">Initial value of the statusName property.</param>
        /// <param name="errorType">Initial value of the errorType property.</param>
        /// <param name="inQuotMode">Initial value of the inQuotMode property.</param>
        /// <param name="quotRequested">Initial value of the quotRequested property.</param>
        /// <param name="yearCounter">Initial value of the yearCounter property.</param>
        /// <param name="quotAccepted">Initial value of the quotAccepted property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static ServiceSum CreateServiceSum(global::System.Int64 customerID, global::System.String customerName, global::System.String iDNumber, global::System.Boolean isFirm, global::System.Int64 worksheetID, global::System.String deviceName, global::System.Boolean hasWarranty, global::System.Int64 errorTypeID, global::System.Int64 statusID, global::System.DateTime serviceStart, global::System.Boolean isPaid, global::System.Double discount, global::System.String statusName, global::System.String errorType, global::System.Boolean inQuotMode, global::System.Boolean quotRequested, global::System.Int32 yearCounter, global::System.Boolean quotAccepted, global::System.Boolean isDeleted)
        {
            ServiceSum serviceSum = new ServiceSum();
            serviceSum.customerID = customerID;
            serviceSum.customerName = customerName;
            serviceSum.IDNumber = iDNumber;
            serviceSum.isFirm = isFirm;
            serviceSum.worksheetID = worksheetID;
            serviceSum.deviceName = deviceName;
            serviceSum.hasWarranty = hasWarranty;
            serviceSum.errorTypeID = errorTypeID;
            serviceSum.statusID = statusID;
            serviceSum.serviceStart = serviceStart;
            serviceSum.isPaid = isPaid;
            serviceSum.discount = discount;
            serviceSum.statusName = statusName;
            serviceSum.errorType = errorType;
            serviceSum.inQuotMode = inQuotMode;
            serviceSum.quotRequested = quotRequested;
            serviceSum.yearCounter = yearCounter;
            serviceSum.quotAccepted = quotAccepted;
            serviceSum.isDeleted = isDeleted;
            return serviceSum;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerID
        {
            get
            {
                return _customerID;
            }
            set
            {
                if (_customerID != value)
                {
                    OncustomerIDChanging(value);
                    ReportPropertyChanging("customerID");
                    _customerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("customerID");
                    OncustomerIDChanged();
                }
            }
        }
        private global::System.Int64 _customerID;
        partial void OncustomerIDChanging(global::System.Int64 value);
        partial void OncustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String customerName
        {
            get
            {
                return _customerName;
            }
            set
            {
                if (_customerName != value)
                {
                    OncustomerNameChanging(value);
                    ReportPropertyChanging("customerName");
                    _customerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("customerName");
                    OncustomerNameChanged();
                }
            }
        }
        private global::System.String _customerName;
        partial void OncustomerNameChanging(global::System.String value);
        partial void OncustomerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IDNumber
        {
            get
            {
                return _IDNumber;
            }
            set
            {
                if (_IDNumber != value)
                {
                    OnIDNumberChanging(value);
                    ReportPropertyChanging("IDNumber");
                    _IDNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IDNumber");
                    OnIDNumberChanged();
                }
            }
        }
        private global::System.String _IDNumber;
        partial void OnIDNumberChanging(global::System.String value);
        partial void OnIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mothersName
        {
            get
            {
                return _mothersName;
            }
            set
            {
                OnmothersNameChanging(value);
                ReportPropertyChanging("mothersName");
                _mothersName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mothersName");
                OnmothersNameChanged();
            }
        }
        private global::System.String _mothersName;
        partial void OnmothersNameChanging(global::System.String value);
        partial void OnmothersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerAddress
        {
            get
            {
                return _customerAddress;
            }
            set
            {
                OncustomerAddressChanging(value);
                ReportPropertyChanging("customerAddress");
                _customerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerAddress");
                OncustomerAddressChanged();
            }
        }
        private global::System.String _customerAddress;
        partial void OncustomerAddressChanging(global::System.String value);
        partial void OncustomerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customerPhone
        {
            get
            {
                return _customerPhone;
            }
            set
            {
                OncustomerPhoneChanging(value);
                ReportPropertyChanging("customerPhone");
                _customerPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customerPhone");
                OncustomerPhoneChanged();
            }
        }
        private global::System.String _customerPhone;
        partial void OncustomerPhoneChanging(global::System.String value);
        partial void OncustomerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birthDate
        {
            get
            {
                return _birthDate;
            }
            set
            {
                OnbirthDateChanging(value);
                ReportPropertyChanging("birthDate");
                _birthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birthDate");
                OnbirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _birthDate;
        partial void OnbirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String workPlace
        {
            get
            {
                return _workPlace;
            }
            set
            {
                OnworkPlaceChanging(value);
                ReportPropertyChanging("workPlace");
                _workPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("workPlace");
                OnworkPlaceChanged();
            }
        }
        private global::System.String _workPlace;
        partial void OnworkPlaceChanging(global::System.String value);
        partial void OnworkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isFirm
        {
            get
            {
                return _isFirm;
            }
            set
            {
                if (_isFirm != value)
                {
                    OnisFirmChanging(value);
                    ReportPropertyChanging("isFirm");
                    _isFirm = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isFirm");
                    OnisFirmChanged();
                }
            }
        }
        private global::System.Boolean _isFirm;
        partial void OnisFirmChanging(global::System.Boolean value);
        partial void OnisFirmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String custComment
        {
            get
            {
                return _custComment;
            }
            set
            {
                OncustCommentChanging(value);
                ReportPropertyChanging("custComment");
                _custComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("custComment");
                OncustCommentChanged();
            }
        }
        private global::System.String _custComment;
        partial void OncustCommentChanging(global::System.String value);
        partial void OncustCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String problems
        {
            get
            {
                return _problems;
            }
            set
            {
                OnproblemsChanging(value);
                ReportPropertyChanging("problems");
                _problems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("problems");
                OnproblemsChanged();
            }
        }
        private global::System.String _problems;
        partial void OnproblemsChanging(global::System.String value);
        partial void OnproblemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> defaultDiscount
        {
            get
            {
                return _defaultDiscount;
            }
            set
            {
                OndefaultDiscountChanging(value);
                ReportPropertyChanging("defaultDiscount");
                _defaultDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultDiscount");
                OndefaultDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _defaultDiscount;
        partial void OndefaultDiscountChanging(Nullable<global::System.Double> value);
        partial void OndefaultDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 worksheetID
        {
            get
            {
                return _worksheetID;
            }
            set
            {
                if (_worksheetID != value)
                {
                    OnworksheetIDChanging(value);
                    ReportPropertyChanging("worksheetID");
                    _worksheetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("worksheetID");
                    OnworksheetIDChanged();
                }
            }
        }
        private global::System.Int64 _worksheetID;
        partial void OnworksheetIDChanging(global::System.Int64 value);
        partial void OnworksheetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String deviceID
        {
            get
            {
                return _deviceID;
            }
            set
            {
                OndeviceIDChanging(value);
                ReportPropertyChanging("deviceID");
                _deviceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("deviceID");
                OndeviceIDChanged();
            }
        }
        private global::System.String _deviceID;
        partial void OndeviceIDChanging(global::System.String value);
        partial void OndeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String deviceManufacturer
        {
            get
            {
                return _deviceManufacturer;
            }
            set
            {
                OndeviceManufacturerChanging(value);
                ReportPropertyChanging("deviceManufacturer");
                _deviceManufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("deviceManufacturer");
                OndeviceManufacturerChanged();
            }
        }
        private global::System.String _deviceManufacturer;
        partial void OndeviceManufacturerChanging(global::System.String value);
        partial void OndeviceManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String deviceName
        {
            get
            {
                return _deviceName;
            }
            set
            {
                if (_deviceName != value)
                {
                    OndeviceNameChanging(value);
                    ReportPropertyChanging("deviceName");
                    _deviceName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("deviceName");
                    OndeviceNameChanged();
                }
            }
        }
        private global::System.String _deviceName;
        partial void OndeviceNameChanging(global::System.String value);
        partial void OndeviceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean hasWarranty
        {
            get
            {
                return _hasWarranty;
            }
            set
            {
                if (_hasWarranty != value)
                {
                    OnhasWarrantyChanging(value);
                    ReportPropertyChanging("hasWarranty");
                    _hasWarranty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("hasWarranty");
                    OnhasWarrantyChanged();
                }
            }
        }
        private global::System.Boolean _hasWarranty;
        partial void OnhasWarrantyChanging(global::System.Boolean value);
        partial void OnhasWarrantyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 errorTypeID
        {
            get
            {
                return _errorTypeID;
            }
            set
            {
                if (_errorTypeID != value)
                {
                    OnerrorTypeIDChanging(value);
                    ReportPropertyChanging("errorTypeID");
                    _errorTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("errorTypeID");
                    OnerrorTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _errorTypeID;
        partial void OnerrorTypeIDChanging(global::System.Int64 value);
        partial void OnerrorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String errorDescription
        {
            get
            {
                return _errorDescription;
            }
            set
            {
                OnerrorDescriptionChanging(value);
                ReportPropertyChanging("errorDescription");
                _errorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("errorDescription");
                OnerrorDescriptionChanged();
            }
        }
        private global::System.String _errorDescription;
        partial void OnerrorDescriptionChanging(global::System.String value);
        partial void OnerrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statusID
        {
            get
            {
                return _statusID;
            }
            set
            {
                if (_statusID != value)
                {
                    OnstatusIDChanging(value);
                    ReportPropertyChanging("statusID");
                    _statusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("statusID");
                    OnstatusIDChanged();
                }
            }
        }
        private global::System.Int64 _statusID;
        partial void OnstatusIDChanging(global::System.Int64 value);
        partial void OnstatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime serviceStart
        {
            get
            {
                return _serviceStart;
            }
            set
            {
                if (_serviceStart != value)
                {
                    OnserviceStartChanging(value);
                    ReportPropertyChanging("serviceStart");
                    _serviceStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serviceStart");
                    OnserviceStartChanged();
                }
            }
        }
        private global::System.DateTime _serviceStart;
        partial void OnserviceStartChanging(global::System.DateTime value);
        partial void OnserviceStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> serviceEnd
        {
            get
            {
                return _serviceEnd;
            }
            set
            {
                OnserviceEndChanging(value);
                ReportPropertyChanging("serviceEnd");
                _serviceEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceEnd");
                OnserviceEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _serviceEnd;
        partial void OnserviceEndChanging(Nullable<global::System.DateTime> value);
        partial void OnserviceEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPaid
        {
            get
            {
                return _isPaid;
            }
            set
            {
                if (_isPaid != value)
                {
                    OnisPaidChanging(value);
                    ReportPropertyChanging("isPaid");
                    _isPaid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isPaid");
                    OnisPaidChanged();
                }
            }
        }
        private global::System.Boolean _isPaid;
        partial void OnisPaidChanging(global::System.Boolean value);
        partial void OnisPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> serviceCost
        {
            get
            {
                return _serviceCost;
            }
            set
            {
                OnserviceCostChanging(value);
                ReportPropertyChanging("serviceCost");
                _serviceCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceCost");
                OnserviceCostChanged();
            }
        }
        private Nullable<global::System.Int64> _serviceCost;
        partial void OnserviceCostChanging(Nullable<global::System.Int64> value);
        partial void OnserviceCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String wsComment
        {
            get
            {
                return _wsComment;
            }
            set
            {
                OnwsCommentChanging(value);
                ReportPropertyChanging("wsComment");
                _wsComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("wsComment");
                OnwsCommentChanged();
            }
        }
        private global::System.String _wsComment;
        partial void OnwsCommentChanging(global::System.String value);
        partial void OnwsCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double discount
        {
            get
            {
                return _discount;
            }
            set
            {
                if (_discount != value)
                {
                    OndiscountChanging(value);
                    ReportPropertyChanging("discount");
                    _discount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("discount");
                    OndiscountChanged();
                }
            }
        }
        private global::System.Double _discount;
        partial void OndiscountChanging(global::System.Double value);
        partial void OndiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String statusName
        {
            get
            {
                return _statusName;
            }
            set
            {
                if (_statusName != value)
                {
                    OnstatusNameChanging(value);
                    ReportPropertyChanging("statusName");
                    _statusName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("statusName");
                    OnstatusNameChanged();
                }
            }
        }
        private global::System.String _statusName;
        partial void OnstatusNameChanging(global::System.String value);
        partial void OnstatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String errorType
        {
            get
            {
                return _errorType;
            }
            set
            {
                if (_errorType != value)
                {
                    OnerrorTypeChanging(value);
                    ReportPropertyChanging("errorType");
                    _errorType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("errorType");
                    OnerrorTypeChanged();
                }
            }
        }
        private global::System.String _errorType;
        partial void OnerrorTypeChanging(global::System.String value);
        partial void OnerrorTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean inQuotMode
        {
            get
            {
                return _inQuotMode;
            }
            set
            {
                if (_inQuotMode != value)
                {
                    OninQuotModeChanging(value);
                    ReportPropertyChanging("inQuotMode");
                    _inQuotMode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("inQuotMode");
                    OninQuotModeChanged();
                }
            }
        }
        private global::System.Boolean _inQuotMode;
        partial void OninQuotModeChanging(global::System.Boolean value);
        partial void OninQuotModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean quotRequested
        {
            get
            {
                return _quotRequested;
            }
            set
            {
                if (_quotRequested != value)
                {
                    OnquotRequestedChanging(value);
                    ReportPropertyChanging("quotRequested");
                    _quotRequested = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("quotRequested");
                    OnquotRequestedChanged();
                }
            }
        }
        private global::System.Boolean _quotRequested;
        partial void OnquotRequestedChanging(global::System.Boolean value);
        partial void OnquotRequestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String plusParts
        {
            get
            {
                return _plusParts;
            }
            set
            {
                OnplusPartsChanging(value);
                ReportPropertyChanging("plusParts");
                _plusParts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("plusParts");
                OnplusPartsChanged();
            }
        }
        private global::System.String _plusParts;
        partial void OnplusPartsChanging(global::System.String value);
        partial void OnplusPartsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 yearCounter
        {
            get
            {
                return _yearCounter;
            }
            set
            {
                if (_yearCounter != value)
                {
                    OnyearCounterChanging(value);
                    ReportPropertyChanging("yearCounter");
                    _yearCounter = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("yearCounter");
                    OnyearCounterChanged();
                }
            }
        }
        private global::System.Int32 _yearCounter;
        partial void OnyearCounterChanging(global::System.Int32 value);
        partial void OnyearCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean quotAccepted
        {
            get
            {
                return _quotAccepted;
            }
            set
            {
                if (_quotAccepted != value)
                {
                    OnquotAcceptedChanging(value);
                    ReportPropertyChanging("quotAccepted");
                    _quotAccepted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("quotAccepted");
                    OnquotAcceptedChanged();
                }
            }
        }
        private global::System.Boolean _quotAccepted;
        partial void OnquotAcceptedChanging(global::System.Boolean value);
        partial void OnquotAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String serialID
        {
            get
            {
                return _serialID;
            }
            set
            {
                OnserialIDChanging(value);
                ReportPropertyChanging("serialID");
                _serialID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("serialID");
                OnserialIDChanged();
            }
        }
        private global::System.String _serialID;
        partial void OnserialIDChanging(global::System.String value);
        partial void OnserialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> buyDate
        {
            get
            {
                return _buyDate;
            }
            set
            {
                OnbuyDateChanging(value);
                ReportPropertyChanging("buyDate");
                _buyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("buyDate");
                OnbuyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _buyDate;
        partial void OnbuyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbuyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String warrantyNumber
        {
            get
            {
                return _warrantyNumber;
            }
            set
            {
                OnwarrantyNumberChanging(value);
                ReportPropertyChanging("warrantyNumber");
                _warrantyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("warrantyNumber");
                OnwarrantyNumberChanged();
            }
        }
        private global::System.String _warrantyNumber;
        partial void OnwarrantyNumberChanging(global::System.String value);
        partial void OnwarrantyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> maxCost
        {
            get
            {
                return _maxCost;
            }
            set
            {
                OnmaxCostChanging(value);
                ReportPropertyChanging("maxCost");
                _maxCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maxCost");
                OnmaxCostChanged();
            }
        }
        private Nullable<global::System.Int64> _maxCost;
        partial void OnmaxCostChanging(Nullable<global::System.Int64> value);
        partial void OnmaxCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                if (_isDeleted != value)
                {
                    OnisDeletedChanging(value);
                    ReportPropertyChanging("isDeleted");
                    _isDeleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isDeleted");
                    OnisDeletedChanged();
                }
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                OncityIDChanging(value);
                ReportPropertyChanging("cityID");
                _cityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cityID");
                OncityIDChanged();
            }
        }
        private Nullable<global::System.Int64> _cityID;
        partial void OncityIDChanging(Nullable<global::System.Int64> value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String postalCode
        {
            get
            {
                return _postalCode;
            }
            set
            {
                OnpostalCodeChanging(value);
                ReportPropertyChanging("postalCode");
                _postalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("postalCode");
                OnpostalCodeChanged();
            }
        }
        private global::System.String _postalCode;
        partial void OnpostalCodeChanging(global::System.String value);
        partial void OnpostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="ServiceWorksheets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceWorksheets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceWorksheets object.
        /// </summary>
        /// <param name="worksheetID">Initial value of the worksheetID property.</param>
        /// <param name="customerID">Initial value of the customerID property.</param>
        /// <param name="deviceName">Initial value of the deviceName property.</param>
        /// <param name="hasWarranty">Initial value of the hasWarranty property.</param>
        /// <param name="errorTypeID">Initial value of the errorTypeID property.</param>
        /// <param name="statusID">Initial value of the statusID property.</param>
        /// <param name="serviceStart">Initial value of the serviceStart property.</param>
        /// <param name="isPaid">Initial value of the isPaid property.</param>
        /// <param name="discount">Initial value of the discount property.</param>
        /// <param name="inQuotMode">Initial value of the inQuotMode property.</param>
        /// <param name="quotRequested">Initial value of the quotRequested property.</param>
        /// <param name="quotAccepted">Initial value of the quotAccepted property.</param>
        /// <param name="yearCounter">Initial value of the yearCounter property.</param>
        public static ServiceWorksheets CreateServiceWorksheets(global::System.Int64 worksheetID, global::System.Int64 customerID, global::System.String deviceName, global::System.Boolean hasWarranty, global::System.Int64 errorTypeID, global::System.Int64 statusID, global::System.DateTime serviceStart, global::System.Boolean isPaid, global::System.Double discount, global::System.Boolean inQuotMode, global::System.Boolean quotRequested, global::System.Boolean quotAccepted, global::System.Int32 yearCounter)
        {
            ServiceWorksheets serviceWorksheets = new ServiceWorksheets();
            serviceWorksheets.worksheetID = worksheetID;
            serviceWorksheets.customerID = customerID;
            serviceWorksheets.deviceName = deviceName;
            serviceWorksheets.hasWarranty = hasWarranty;
            serviceWorksheets.errorTypeID = errorTypeID;
            serviceWorksheets.statusID = statusID;
            serviceWorksheets.serviceStart = serviceStart;
            serviceWorksheets.isPaid = isPaid;
            serviceWorksheets.discount = discount;
            serviceWorksheets.inQuotMode = inQuotMode;
            serviceWorksheets.quotRequested = quotRequested;
            serviceWorksheets.quotAccepted = quotAccepted;
            serviceWorksheets.yearCounter = yearCounter;
            return serviceWorksheets;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 worksheetID
        {
            get
            {
                return _worksheetID;
            }
            set
            {
                if (_worksheetID != value)
                {
                    OnworksheetIDChanging(value);
                    ReportPropertyChanging("worksheetID");
                    _worksheetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("worksheetID");
                    OnworksheetIDChanged();
                }
            }
        }
        private global::System.Int64 _worksheetID;
        partial void OnworksheetIDChanging(global::System.Int64 value);
        partial void OnworksheetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 customerID
        {
            get
            {
                return _customerID;
            }
            set
            {
                OncustomerIDChanging(value);
                ReportPropertyChanging("customerID");
                _customerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("customerID");
                OncustomerIDChanged();
            }
        }
        private global::System.Int64 _customerID;
        partial void OncustomerIDChanging(global::System.Int64 value);
        partial void OncustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String serialID
        {
            get
            {
                return _serialID;
            }
            set
            {
                OnserialIDChanging(value);
                ReportPropertyChanging("serialID");
                _serialID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("serialID");
                OnserialIDChanged();
            }
        }
        private global::System.String _serialID;
        partial void OnserialIDChanging(global::System.String value);
        partial void OnserialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String deviceID
        {
            get
            {
                return _deviceID;
            }
            set
            {
                OndeviceIDChanging(value);
                ReportPropertyChanging("deviceID");
                _deviceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("deviceID");
                OndeviceIDChanged();
            }
        }
        private global::System.String _deviceID;
        partial void OndeviceIDChanging(global::System.String value);
        partial void OndeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String deviceManufacturer
        {
            get
            {
                return _deviceManufacturer;
            }
            set
            {
                OndeviceManufacturerChanging(value);
                ReportPropertyChanging("deviceManufacturer");
                _deviceManufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("deviceManufacturer");
                OndeviceManufacturerChanged();
            }
        }
        private global::System.String _deviceManufacturer;
        partial void OndeviceManufacturerChanging(global::System.String value);
        partial void OndeviceManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String deviceName
        {
            get
            {
                return _deviceName;
            }
            set
            {
                OndeviceNameChanging(value);
                ReportPropertyChanging("deviceName");
                _deviceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("deviceName");
                OndeviceNameChanged();
            }
        }
        private global::System.String _deviceName;
        partial void OndeviceNameChanging(global::System.String value);
        partial void OndeviceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean hasWarranty
        {
            get
            {
                return _hasWarranty;
            }
            set
            {
                OnhasWarrantyChanging(value);
                ReportPropertyChanging("hasWarranty");
                _hasWarranty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hasWarranty");
                OnhasWarrantyChanged();
            }
        }
        private global::System.Boolean _hasWarranty;
        partial void OnhasWarrantyChanging(global::System.Boolean value);
        partial void OnhasWarrantyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 errorTypeID
        {
            get
            {
                return _errorTypeID;
            }
            set
            {
                OnerrorTypeIDChanging(value);
                ReportPropertyChanging("errorTypeID");
                _errorTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("errorTypeID");
                OnerrorTypeIDChanged();
            }
        }
        private global::System.Int64 _errorTypeID;
        partial void OnerrorTypeIDChanging(global::System.Int64 value);
        partial void OnerrorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String errorDescription
        {
            get
            {
                return _errorDescription;
            }
            set
            {
                OnerrorDescriptionChanging(value);
                ReportPropertyChanging("errorDescription");
                _errorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("errorDescription");
                OnerrorDescriptionChanged();
            }
        }
        private global::System.String _errorDescription;
        partial void OnerrorDescriptionChanging(global::System.String value);
        partial void OnerrorDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statusID
        {
            get
            {
                return _statusID;
            }
            set
            {
                OnstatusIDChanging(value);
                ReportPropertyChanging("statusID");
                _statusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statusID");
                OnstatusIDChanged();
            }
        }
        private global::System.Int64 _statusID;
        partial void OnstatusIDChanging(global::System.Int64 value);
        partial void OnstatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime serviceStart
        {
            get
            {
                return _serviceStart;
            }
            set
            {
                OnserviceStartChanging(value);
                ReportPropertyChanging("serviceStart");
                _serviceStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceStart");
                OnserviceStartChanged();
            }
        }
        private global::System.DateTime _serviceStart;
        partial void OnserviceStartChanging(global::System.DateTime value);
        partial void OnserviceStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> serviceEnd
        {
            get
            {
                return _serviceEnd;
            }
            set
            {
                OnserviceEndChanging(value);
                ReportPropertyChanging("serviceEnd");
                _serviceEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceEnd");
                OnserviceEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _serviceEnd;
        partial void OnserviceEndChanging(Nullable<global::System.DateTime> value);
        partial void OnserviceEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPaid
        {
            get
            {
                return _isPaid;
            }
            set
            {
                OnisPaidChanging(value);
                ReportPropertyChanging("isPaid");
                _isPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPaid");
                OnisPaidChanged();
            }
        }
        private global::System.Boolean _isPaid;
        partial void OnisPaidChanging(global::System.Boolean value);
        partial void OnisPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> groupID
        {
            get
            {
                return _groupID;
            }
            set
            {
                OngroupIDChanging(value);
                ReportPropertyChanging("groupID");
                _groupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("groupID");
                OngroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _groupID;
        partial void OngroupIDChanging(Nullable<global::System.Int64> value);
        partial void OngroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> serviceCost
        {
            get
            {
                return _serviceCost;
            }
            set
            {
                OnserviceCostChanging(value);
                ReportPropertyChanging("serviceCost");
                _serviceCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceCost");
                OnserviceCostChanged();
            }
        }
        private Nullable<global::System.Int64> _serviceCost;
        partial void OnserviceCostChanging(Nullable<global::System.Int64> value);
        partial void OnserviceCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double discount
        {
            get
            {
                return _discount;
            }
            set
            {
                OndiscountChanging(value);
                ReportPropertyChanging("discount");
                _discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("discount");
                OndiscountChanged();
            }
        }
        private global::System.Double _discount;
        partial void OndiscountChanging(global::System.Double value);
        partial void OndiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean inQuotMode
        {
            get
            {
                return _inQuotMode;
            }
            set
            {
                OninQuotModeChanging(value);
                ReportPropertyChanging("inQuotMode");
                _inQuotMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("inQuotMode");
                OninQuotModeChanged();
            }
        }
        private global::System.Boolean _inQuotMode;
        partial void OninQuotModeChanging(global::System.Boolean value);
        partial void OninQuotModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean quotRequested
        {
            get
            {
                return _quotRequested;
            }
            set
            {
                OnquotRequestedChanging(value);
                ReportPropertyChanging("quotRequested");
                _quotRequested = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quotRequested");
                OnquotRequestedChanged();
            }
        }
        private global::System.Boolean _quotRequested;
        partial void OnquotRequestedChanging(global::System.Boolean value);
        partial void OnquotRequestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean quotAccepted
        {
            get
            {
                return _quotAccepted;
            }
            set
            {
                OnquotAcceptedChanging(value);
                ReportPropertyChanging("quotAccepted");
                _quotAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quotAccepted");
                OnquotAcceptedChanged();
            }
        }
        private global::System.Boolean _quotAccepted;
        partial void OnquotAcceptedChanging(global::System.Boolean value);
        partial void OnquotAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String plusParts
        {
            get
            {
                return _plusParts;
            }
            set
            {
                OnplusPartsChanging(value);
                ReportPropertyChanging("plusParts");
                _plusParts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("plusParts");
                OnplusPartsChanged();
            }
        }
        private global::System.String _plusParts;
        partial void OnplusPartsChanging(global::System.String value);
        partial void OnplusPartsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 yearCounter
        {
            get
            {
                return _yearCounter;
            }
            set
            {
                OnyearCounterChanging(value);
                ReportPropertyChanging("yearCounter");
                _yearCounter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("yearCounter");
                OnyearCounterChanged();
            }
        }
        private global::System.Int32 _yearCounter;
        partial void OnyearCounterChanging(global::System.Int32 value);
        partial void OnyearCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> buyDate
        {
            get
            {
                return _buyDate;
            }
            set
            {
                OnbuyDateChanging(value);
                ReportPropertyChanging("buyDate");
                _buyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("buyDate");
                OnbuyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _buyDate;
        partial void OnbuyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbuyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String warrantyNumber
        {
            get
            {
                return _warrantyNumber;
            }
            set
            {
                OnwarrantyNumberChanging(value);
                ReportPropertyChanging("warrantyNumber");
                _warrantyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("warrantyNumber");
                OnwarrantyNumberChanged();
            }
        }
        private global::System.String _warrantyNumber;
        partial void OnwarrantyNumberChanging(global::System.String value);
        partial void OnwarrantyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> maxCost
        {
            get
            {
                return _maxCost;
            }
            set
            {
                OnmaxCostChanging(value);
                ReportPropertyChanging("maxCost");
                _maxCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maxCost");
                OnmaxCostChanged();
            }
        }
        private Nullable<global::System.Int64> _maxCost;
        partial void OnmaxCostChanging(Nullable<global::System.Int64> value);
        partial void OnmaxCostChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_ServiceWorksheets_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_ServiceWorksheets_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_ServiceWorksheets_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("dbGyorokModel.FK_ServiceWorksheets_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("dbGyorokModel.FK_ServiceWorksheets_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_ServiceWorksheets_ErrorTypes", "ErrorTypes")]
        public ErrorTypes ErrorTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ErrorTypes>("dbGyorokModel.FK_ServiceWorksheets_ErrorTypes", "ErrorTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ErrorTypes>("dbGyorokModel.FK_ServiceWorksheets_ErrorTypes", "ErrorTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ErrorTypes> ErrorTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ErrorTypes>("dbGyorokModel.FK_ServiceWorksheets_ErrorTypes", "ErrorTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ErrorTypes>("dbGyorokModel.FK_ServiceWorksheets_ErrorTypes", "ErrorTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Parts_ServiceWorksheets", "Parts")]
        public EntityCollection<Parts> Parts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parts>("dbGyorokModel.FK_Parts_ServiceWorksheets", "Parts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parts>("dbGyorokModel.FK_Parts_ServiceWorksheets", "Parts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_ServiceWorksheets_ServiceStatuses", "ServiceStatuses")]
        public ServiceStatuses ServiceStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceStatuses>("dbGyorokModel.FK_ServiceWorksheets_ServiceStatuses", "ServiceStatuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceStatuses>("dbGyorokModel.FK_ServiceWorksheets_ServiceStatuses", "ServiceStatuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceStatuses> ServiceStatusesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceStatuses>("dbGyorokModel.FK_ServiceWorksheets_ServiceStatuses", "ServiceStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceStatuses>("dbGyorokModel.FK_ServiceWorksheets_ServiceStatuses", "ServiceStatuses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="SimpleParts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimpleParts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimpleParts object.
        /// </summary>
        /// <param name="partID">Initial value of the partID property.</param>
        /// <param name="partName">Initial value of the partName property.</param>
        /// <param name="partPrice">Initial value of the partPrice property.</param>
        /// <param name="partQuantity">Initial value of the partQuantity property.</param>
        /// <param name="serviceID">Initial value of the serviceID property.</param>
        public static SimpleParts CreateSimpleParts(global::System.Int64 partID, global::System.String partName, global::System.Int64 partPrice, global::System.Int32 partQuantity, global::System.Int64 serviceID)
        {
            SimpleParts simpleParts = new SimpleParts();
            simpleParts.partID = partID;
            simpleParts.partName = partName;
            simpleParts.partPrice = partPrice;
            simpleParts.partQuantity = partQuantity;
            simpleParts.serviceID = serviceID;
            return simpleParts;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 partID
        {
            get
            {
                return _partID;
            }
            set
            {
                if (_partID != value)
                {
                    OnpartIDChanging(value);
                    ReportPropertyChanging("partID");
                    _partID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("partID");
                    OnpartIDChanged();
                }
            }
        }
        private global::System.Int64 _partID;
        partial void OnpartIDChanging(global::System.Int64 value);
        partial void OnpartIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String partName
        {
            get
            {
                return _partName;
            }
            set
            {
                if (_partName != value)
                {
                    OnpartNameChanging(value);
                    ReportPropertyChanging("partName");
                    _partName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("partName");
                    OnpartNameChanged();
                }
            }
        }
        private global::System.String _partName;
        partial void OnpartNameChanging(global::System.String value);
        partial void OnpartNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 partPrice
        {
            get
            {
                return _partPrice;
            }
            set
            {
                if (_partPrice != value)
                {
                    OnpartPriceChanging(value);
                    ReportPropertyChanging("partPrice");
                    _partPrice = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("partPrice");
                    OnpartPriceChanged();
                }
            }
        }
        private global::System.Int64 _partPrice;
        partial void OnpartPriceChanging(global::System.Int64 value);
        partial void OnpartPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 partQuantity
        {
            get
            {
                return _partQuantity;
            }
            set
            {
                if (_partQuantity != value)
                {
                    OnpartQuantityChanging(value);
                    ReportPropertyChanging("partQuantity");
                    _partQuantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("partQuantity");
                    OnpartQuantityChanged();
                }
            }
        }
        private global::System.Int32 _partQuantity;
        partial void OnpartQuantityChanging(global::System.Int32 value);
        partial void OnpartQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 serviceID
        {
            get
            {
                return _serviceID;
            }
            set
            {
                if (_serviceID != value)
                {
                    OnserviceIDChanging(value);
                    ReportPropertyChanging("serviceID");
                    _serviceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serviceID");
                    OnserviceIDChanged();
                }
            }
        }
        private global::System.Int64 _serviceID;
        partial void OnserviceIDChanging(global::System.Int64 value);
        partial void OnserviceIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="SystemParameters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemParameters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemParameters object.
        /// </summary>
        /// <param name="parameterID">Initial value of the parameterID property.</param>
        public static SystemParameters CreateSystemParameters(global::System.Int64 parameterID)
        {
            SystemParameters systemParameters = new SystemParameters();
            systemParameters.parameterID = parameterID;
            return systemParameters;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 parameterID
        {
            get
            {
                return _parameterID;
            }
            set
            {
                if (_parameterID != value)
                {
                    OnparameterIDChanging(value);
                    ReportPropertyChanging("parameterID");
                    _parameterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("parameterID");
                    OnparameterIDChanged();
                }
            }
        }
        private global::System.Int64 _parameterID;
        partial void OnparameterIDChanging(global::System.Int64 value);
        partial void OnparameterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companyName
        {
            get
            {
                return _companyName;
            }
            set
            {
                OncompanyNameChanging(value);
                ReportPropertyChanging("companyName");
                _companyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companyName");
                OncompanyNameChanged();
            }
        }
        private global::System.String _companyName;
        partial void OncompanyNameChanging(global::System.String value);
        partial void OncompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companyAddress
        {
            get
            {
                return _companyAddress;
            }
            set
            {
                OncompanyAddressChanging(value);
                ReportPropertyChanging("companyAddress");
                _companyAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companyAddress");
                OncompanyAddressChanged();
            }
        }
        private global::System.String _companyAddress;
        partial void OncompanyAddressChanging(global::System.String value);
        partial void OncompanyAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companyPhone1
        {
            get
            {
                return _companyPhone1;
            }
            set
            {
                OncompanyPhone1Changing(value);
                ReportPropertyChanging("companyPhone1");
                _companyPhone1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companyPhone1");
                OncompanyPhone1Changed();
            }
        }
        private global::System.String _companyPhone1;
        partial void OncompanyPhone1Changing(global::System.String value);
        partial void OncompanyPhone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companyPhone2
        {
            get
            {
                return _companyPhone2;
            }
            set
            {
                OncompanyPhone2Changing(value);
                ReportPropertyChanging("companyPhone2");
                _companyPhone2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companyPhone2");
                OncompanyPhone2Changed();
            }
        }
        private global::System.String _companyPhone2;
        partial void OncompanyPhone2Changing(global::System.String value);
        partial void OncompanyPhone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String openTime
        {
            get
            {
                return _openTime;
            }
            set
            {
                OnopenTimeChanging(value);
                ReportPropertyChanging("openTime");
                _openTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("openTime");
                OnopenTimeChanged();
            }
        }
        private global::System.String _openTime;
        partial void OnopenTimeChanging(global::System.String value);
        partial void OnopenTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> costOfClean
        {
            get
            {
                return _costOfClean;
            }
            set
            {
                OncostOfCleanChanging(value);
                ReportPropertyChanging("costOfClean");
                _costOfClean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("costOfClean");
                OncostOfCleanChanged();
            }
        }
        private Nullable<global::System.Int64> _costOfClean;
        partial void OncostOfCleanChanging(Nullable<global::System.Int64> value);
        partial void OncostOfCleanChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="TableVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableVersions object.
        /// </summary>
        /// <param name="tableName">Initial value of the tableName property.</param>
        /// <param name="tableVersion">Initial value of the tableVersion property.</param>
        public static TableVersions CreateTableVersions(global::System.String tableName, global::System.Int64 tableVersion)
        {
            TableVersions tableVersions = new TableVersions();
            tableVersions.tableName = tableName;
            tableVersions.tableVersion = tableVersion;
            return tableVersions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tableName
        {
            get
            {
                return _tableName;
            }
            set
            {
                if (_tableName != value)
                {
                    OntableNameChanging(value);
                    ReportPropertyChanging("tableName");
                    _tableName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tableName");
                    OntableNameChanged();
                }
            }
        }
        private global::System.String _tableName;
        partial void OntableNameChanging(global::System.String value);
        partial void OntableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 tableVersion
        {
            get
            {
                return _tableVersion;
            }
            set
            {
                if (_tableVersion != value)
                {
                    OntableVersionChanging(value);
                    ReportPropertyChanging("tableVersion");
                    _tableVersion = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tableVersion");
                    OntableVersionChanged();
                }
            }
        }
        private global::System.Int64 _tableVersion;
        partial void OntableVersionChanging(global::System.Int64 value);
        partial void OntableVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="Tools")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tools : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tools object.
        /// </summary>
        /// <param name="toolID">Initial value of the toolID property.</param>
        /// <param name="toolName">Initial value of the toolName property.</param>
        /// <param name="iDNumber">Initial value of the IDNumber property.</param>
        /// <param name="rentPrice">Initial value of the rentPrice property.</param>
        /// <param name="toolStatusID">Initial value of the toolStatusID property.</param>
        /// <param name="fromDate">Initial value of the fromDate property.</param>
        /// <param name="rentCounter">Initial value of the rentCounter property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static Tools CreateTools(global::System.Int64 toolID, global::System.String toolName, global::System.String iDNumber, global::System.Int64 rentPrice, global::System.Int64 toolStatusID, global::System.DateTime fromDate, global::System.Int32 rentCounter, global::System.Boolean isDeleted)
        {
            Tools tools = new Tools();
            tools.toolID = toolID;
            tools.toolName = toolName;
            tools.IDNumber = iDNumber;
            tools.rentPrice = rentPrice;
            tools.toolStatusID = toolStatusID;
            tools.fromDate = fromDate;
            tools.rentCounter = rentCounter;
            tools.isDeleted = isDeleted;
            return tools;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 toolID
        {
            get
            {
                return _toolID;
            }
            set
            {
                if (_toolID != value)
                {
                    OntoolIDChanging(value);
                    ReportPropertyChanging("toolID");
                    _toolID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("toolID");
                    OntoolIDChanged();
                }
            }
        }
        private global::System.Int64 _toolID;
        partial void OntoolIDChanging(global::System.Int64 value);
        partial void OntoolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String toolName
        {
            get
            {
                return _toolName;
            }
            set
            {
                OntoolNameChanging(value);
                ReportPropertyChanging("toolName");
                _toolName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("toolName");
                OntoolNameChanged();
            }
        }
        private global::System.String _toolName;
        partial void OntoolNameChanging(global::System.String value);
        partial void OntoolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String toolManufacturer
        {
            get
            {
                return _toolManufacturer;
            }
            set
            {
                OntoolManufacturerChanging(value);
                ReportPropertyChanging("toolManufacturer");
                _toolManufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("toolManufacturer");
                OntoolManufacturerChanged();
            }
        }
        private global::System.String _toolManufacturer;
        partial void OntoolManufacturerChanging(global::System.String value);
        partial void OntoolManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IDNumber
        {
            get
            {
                return _IDNumber;
            }
            set
            {
                OnIDNumberChanging(value);
                ReportPropertyChanging("IDNumber");
                _IDNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IDNumber");
                OnIDNumberChanged();
            }
        }
        private global::System.String _IDNumber;
        partial void OnIDNumberChanging(global::System.String value);
        partial void OnIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String serialNumber
        {
            get
            {
                return _serialNumber;
            }
            set
            {
                OnserialNumberChanging(value);
                ReportPropertyChanging("serialNumber");
                _serialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("serialNumber");
                OnserialNumberChanged();
            }
        }
        private global::System.String _serialNumber;
        partial void OnserialNumberChanging(global::System.String value);
        partial void OnserialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 rentPrice
        {
            get
            {
                return _rentPrice;
            }
            set
            {
                OnrentPriceChanging(value);
                ReportPropertyChanging("rentPrice");
                _rentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentPrice");
                OnrentPriceChanged();
            }
        }
        private global::System.Int64 _rentPrice;
        partial void OnrentPriceChanging(global::System.Int64 value);
        partial void OnrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 toolStatusID
        {
            get
            {
                return _toolStatusID;
            }
            set
            {
                OntoolStatusIDChanging(value);
                ReportPropertyChanging("toolStatusID");
                _toolStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("toolStatusID");
                OntoolStatusIDChanged();
            }
        }
        private global::System.Int64 _toolStatusID;
        partial void OntoolStatusIDChanging(global::System.Int64 value);
        partial void OntoolStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime fromDate
        {
            get
            {
                return _fromDate;
            }
            set
            {
                OnfromDateChanging(value);
                ReportPropertyChanging("fromDate");
                _fromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fromDate");
                OnfromDateChanged();
            }
        }
        private global::System.DateTime _fromDate;
        partial void OnfromDateChanging(global::System.DateTime value);
        partial void OnfromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> defaultDeposit
        {
            get
            {
                return _defaultDeposit;
            }
            set
            {
                OndefaultDepositChanging(value);
                ReportPropertyChanging("defaultDeposit");
                _defaultDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultDeposit");
                OndefaultDepositChanged();
            }
        }
        private Nullable<global::System.Int64> _defaultDeposit;
        partial void OndefaultDepositChanging(Nullable<global::System.Int64> value);
        partial void OndefaultDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rentCounter
        {
            get
            {
                return _rentCounter;
            }
            set
            {
                OnrentCounterChanging(value);
                ReportPropertyChanging("rentCounter");
                _rentCounter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rentCounter");
                OnrentCounterChanged();
            }
        }
        private global::System.Int32 _rentCounter;
        partial void OnrentCounterChanging(global::System.Int32 value);
        partial void OnrentCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Rentals_Tools", "Rentals")]
        public EntityCollection<Rentals> Rentals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_Tools", "Rentals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rentals>("dbGyorokModel.FK_Rentals_Tools", "Rentals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Tools_ToolStatuses", "ToolStatuses")]
        public ToolStatuses ToolStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolStatuses>("dbGyorokModel.FK_Tools_ToolStatuses", "ToolStatuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolStatuses>("dbGyorokModel.FK_Tools_ToolStatuses", "ToolStatuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ToolStatuses> ToolStatusesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolStatuses>("dbGyorokModel.FK_Tools_ToolStatuses", "ToolStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ToolStatuses>("dbGyorokModel.FK_Tools_ToolStatuses", "ToolStatuses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbGyorokModel", Name="ToolStatuses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToolStatuses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToolStatuses object.
        /// </summary>
        /// <param name="toolStatusID">Initial value of the toolStatusID property.</param>
        /// <param name="statusName">Initial value of the statusName property.</param>
        public static ToolStatuses CreateToolStatuses(global::System.Int64 toolStatusID, global::System.String statusName)
        {
            ToolStatuses toolStatuses = new ToolStatuses();
            toolStatuses.toolStatusID = toolStatusID;
            toolStatuses.statusName = statusName;
            return toolStatuses;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 toolStatusID
        {
            get
            {
                return _toolStatusID;
            }
            set
            {
                if (_toolStatusID != value)
                {
                    OntoolStatusIDChanging(value);
                    ReportPropertyChanging("toolStatusID");
                    _toolStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("toolStatusID");
                    OntoolStatusIDChanged();
                }
            }
        }
        private global::System.Int64 _toolStatusID;
        partial void OntoolStatusIDChanging(global::System.Int64 value);
        partial void OntoolStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String statusName
        {
            get
            {
                return _statusName;
            }
            set
            {
                OnstatusNameChanging(value);
                ReportPropertyChanging("statusName");
                _statusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("statusName");
                OnstatusNameChanged();
            }
        }
        private global::System.String _statusName;
        partial void OnstatusNameChanging(global::System.String value);
        partial void OnstatusNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbGyorokModel", "FK_Tools_ToolStatuses", "Tools")]
        public EntityCollection<Tools> Tools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tools>("dbGyorokModel.FK_Tools_ToolStatuses", "Tools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tools>("dbGyorokModel.FK_Tools_ToolStatuses", "Tools", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
